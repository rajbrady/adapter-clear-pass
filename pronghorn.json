{
  "id": "@itentialopensource/adapter-Adapter-Clear-Pass",
  "type": "Adapter",
  "export": "AdapterClearPass",
  "title": "Adapter-Clear-Pass",
  "src": "adapter.js",
  "roles": [
    "admin"
  ],
  "methods": [
    {
      "name": "updateAdapterConfiguration",
      "summary": "Updates the adapter configuration",
      "description": "Updates the adapter configuration file with the provided changes",
      "input": [
        {
          "name": "configFile",
          "type": "string",
          "info": "The name of the file to change",
          "required": true,
          "schema": {
            "title": "configFile",
            "type": "string"
          }
        },
        {
          "name": "changes",
          "type": "object",
          "info": "JSON object containing the configuration changes",
          "required": true,
          "schema": {
            "title": "changes",
            "type": "object"
          }
        },
        {
          "name": "entity",
          "type": "string",
          "info": "The entity in which the changes are being made",
          "required": false,
          "schema": {
            "title": "entity",
            "type": "string"
          }
        },
        {
          "name": "type",
          "type": "string",
          "info": "The type of file to change - action, schema, or mock",
          "required": false,
          "schema": {
            "title": "type",
            "type": "string"
          }
        },
        {
          "name": "action",
          "type": "string",
          "info": "The action to be changed",
          "required": false,
          "schema": {
            "title": "action",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/updateAdapterConfiguration"
      },
      "task": true
    },
    {
      "name": "findPath",
      "summary": "Provides the ability to see if a particular API path is supported by the adapter",
      "description": "Provides the ability to see if a particular API path is supported by the adapter",
      "input": [
        {
          "name": "apiPath",
          "type": "string",
          "info": "The API Path you want to check - make sure to not include base path and version",
          "description": "The API Path you want to check - make sure to not include base path and version",
          "schema": {
            "title": "apiPath",
            "type": "string"
          },
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/findPath"
      },
      "task": true
    },
    {
      "name": "troubleshoot",
      "summary": "Runs troubleshoot script for adapter",
      "description": "Runs troubleshoot script for adapter",
      "input": [
        {
          "name": "props",
          "type": "object",
          "info": "Object containing configuration, healthcheck and auth properties {'connProps':{'host': 'api.service.com', 'base_path': '/', 'protocol': 'http', 'port': 443, 'version': 'v1'},'healthCheckEndpoint': '/healthcheck', 'auth': {'auth_method': 'no authentication', 'username': 'username', 'password': 'password'}}",
          "required": true,
          "schema": {
            "title": "props",
            "type": "object"
          }
        },
        {
          "name": "persistFlag",
          "type": "boolean",
          "info": "Whether the input properties should be saved",
          "required": true
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing the test results",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/troubleshoot"
      },
      "task": true
    },
    {
      "name": "runHealthcheck",
      "summary": "Runs healthcheck script for adapter",
      "description": "Runs healthcheck script for adapter",
      "input": [],
      "output": {
        "name": "result",
        "type": "boolean",
        "description": "Whether healthcheck passed or failed"
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/runHealthcheck"
      },
      "task": true
    },
    {
      "name": "runConnectivity",
      "summary": "Runs connectivity check script for adapter",
      "description": "Runs connectivity check script for adapter",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing the test results",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/runConnectivity"
      },
      "task": true
    },
    {
      "name": "runBasicGet",
      "summary": "Runs basicGet script for adapter",
      "description": "Runs basicGet script for adapter",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing the test results",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/runBasicGet"
      },
      "task": true
    },
    {
      "name": "suspend",
      "summary": "Suspends the adapter",
      "description": "Suspends the adapter",
      "input": [
        {
          "name": "mode",
          "type": "enum",
          "enumerals": [
            "pause",
            "error"
          ],
          "info": "How incoming requests are handled. Defaults to 'pause'",
          "description": "How incoming requests are handled. Defaults to 'pause'",
          "schema": {
            "title": "mode",
            "type": "string"
          },
          "required": false
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing the adapter suspended status",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/suspend"
      },
      "task": true
    },
    {
      "name": "unsuspend",
      "summary": "Unsuspends the adapter",
      "description": "Unsuspends the adapter",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing the adapter suspended status",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/unsuspend"
      },
      "task": true
    },
    {
      "name": "getQueue",
      "summary": "Return the requests that are waiting in the queue if throttling is enabled",
      "description": "Return the requests that are waiting in the queue if throttling is enabled",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing the adapter queue",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getQueue"
      },
      "task": true
    },
    {
      "name": "genericAdapterRequest",
      "summary": "Makes the requested generic call",
      "description": "Makes the requested generic call",
      "input": [
        {
          "name": "uriPath",
          "type": "string",
          "info": "the path of the api call - do not include the host, port, base path or version",
          "description": "the path of the api call",
          "schema": {
            "title": "uriPath",
            "type": "string"
          },
          "required": true
        },
        {
          "name": "restMethod",
          "type": "string",
          "info": "the rest method (GET, POST, PUT, PATCH, DELETE)",
          "description": "the rest method (GET, POST, PUT, PATCH, DELETE)",
          "schema": {
            "title": "restMethod",
            "type": "string"
          },
          "required": true
        },
        {
          "name": "queryData",
          "type": "object",
          "info": "the query parameters to be put on the url (optional)",
          "description": "the query parameters to be put on the url (optional)",
          "schema": {
            "title": "queryData",
            "type": "object"
          },
          "required": false
        },
        {
          "name": "requestBody",
          "type": "object",
          "info": "the payload to be sent with the request (optional)",
          "description": "the payload to be sent with the request (optional)",
          "schema": {
            "title": "requestBody",
            "type": "object"
          },
          "required": false
        },
        {
          "name": "addlHeaders",
          "type": "object",
          "info": "additional headers to be put on the call (optional)",
          "description": "additional headers to be put on the call (optional)",
          "schema": {
            "title": "addlHeaders",
            "type": "object"
          },
          "required": false
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/genericAdapterRequest"
      },
      "task": true
    },
    {
      "name": "getForStaticHostList",
      "summary": "GET_for_StaticHostList",
      "description": "Get a list of static host lists",
      "input": [
        {
          "name": "filter",
          "type": "string",
          "info": "JSON filter expression specifying the items to return: string",
          "required": false,
          "schema": {
            "title": "filter",
            "type": "string"
          }
        },
        {
          "name": "sort",
          "type": "string",
          "info": "Sort ordering for returned items: string",
          "required": false,
          "schema": {
            "title": "sort",
            "type": "string"
          }
        },
        {
          "name": "offset",
          "type": "number",
          "info": "Zero based offset to start from: 123",
          "required": false,
          "schema": {
            "title": "offset",
            "type": "number"
          }
        },
        {
          "name": "limit",
          "type": "number",
          "info": "Maximum number of items to return (1 – 1000): 123",
          "required": false,
          "schema": {
            "title": "limit",
            "type": "number"
          }
        },
        {
          "name": "calculateCount",
          "type": "boolean",
          "info": "Whether to calculate the total item count: boolean",
          "required": false,
          "schema": {
            "title": "calculateCount",
            "type": "boolean"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "StaticHostListList",
          "type": "object",
          "properties": {
            "_embedded": {
              "title": "StaticHostListItems",
              "type": "object",
              "properties": {
                "items": {
                  "description": "List of items matching the filter",
                  "type": "array",
                  "items": {
                    "title": "StaticHostList",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Numeric ID of the static host list",
                        "type": "integer",
                        "format": "int64"
                      },
                      "name": {
                        "description": "Name of the static host list",
                        "type": "string"
                      },
                      "description": {
                        "description": "Description of the static host list",
                        "type": "string"
                      },
                      "host_format": {
                        "title": "HostFormat",
                        "description": "Format of the static host list",
                        "type": "string",
                        "enum": [
                          "subnet",
                          "regex",
                          "list"
                        ]
                      },
                      "host_type": {
                        "title": "HostType",
                        "description": "Host type of the static host list",
                        "type": "string",
                        "enum": [
                          "IPAddress",
                          "MACAddress"
                        ]
                      },
                      "value": {
                        "description": "List of static hosts in the selected format",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": [
                "items"
              ]
            },
            "_links": {
              "title": "HalLinks",
              "type": "object",
              "properties": {
                "self": {
                  "description": "URL of result",
                  "type": "string"
                },
                "first": {
                  "description": "URL of first page of results",
                  "type": "string"
                },
                "last": {
                  "description": "URL of last page of results",
                  "type": "string"
                },
                "prev": {
                  "description": "URL of previous page of results",
                  "type": "string"
                },
                "next": {
                  "description": "URL of next page of results",
                  "type": "string"
                }
              },
              "required": [
                "self",
                "first"
              ]
            },
            "count": {
              "description": "Total number of items matching the filter; returned if calculate_count is true",
              "type": "integer",
              "format": "int64"
            }
          },
          "required": [
            "_embedded",
            "_links"
          ]
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getForStaticHostList"
      },
      "task": true
    },
    {
      "name": "postForStaticHostList",
      "summary": "POST_for_StaticHostList",
      "description": "Create a static host list",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": ": {\"id\": 123, \"name\": \"string\", \"description\": \"string\", \"host_format\": \"Must be one of [subnet, regex, list]\", \"host_type\": \"Must be one of [IPAddress, MACAddress]\", \"value\": \"string\"}",
          "required": true,
          "schema": {
            "title": "StaticHostList",
            "type": "object",
            "properties": {
              "id": {
                "description": "Numeric ID of the static host list",
                "type": "integer",
                "format": "int64"
              },
              "name": {
                "description": "Name of the static host list",
                "type": "string"
              },
              "description": {
                "description": "Description of the static host list",
                "type": "string"
              },
              "host_format": {
                "title": "HostFormat",
                "description": "Format of the static host list",
                "type": "string",
                "enum": [
                  "subnet",
                  "regex",
                  "list"
                ]
              },
              "host_type": {
                "title": "HostType",
                "description": "Host type of the static host list",
                "type": "string",
                "enum": [
                  "IPAddress",
                  "MACAddress"
                ]
              },
              "value": {
                "description": "List of static hosts in the selected format",
                "type": "string"
              }
            }
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "StaticHostList",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the static host list",
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "description": "Name of the static host list",
              "type": "string"
            },
            "description": {
              "description": "Description of the static host list",
              "type": "string"
            },
            "host_format": {
              "title": "HostFormat",
              "description": "Format of the static host list",
              "type": "string",
              "enum": [
                "subnet",
                "regex",
                "list"
              ]
            },
            "host_type": {
              "title": "HostType",
              "description": "Host type of the static host list",
              "type": "string",
              "enum": [
                "IPAddress",
                "MACAddress"
              ]
            },
            "value": {
              "description": "List of static hosts in the selected format",
              "type": "string"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/postForStaticHostList"
      },
      "task": true
    },
    {
      "name": "getGETForStaticHostList",
      "summary": "GET_for_StaticHostList",
      "description": "Get a static host list",
      "input": [
        {
          "name": "staticHostListId",
          "type": "number",
          "info": "Numeric ID of the static host list: 123",
          "required": true,
          "schema": {
            "title": "staticHostListId",
            "type": "number"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "StaticHostList",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the static host list",
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "description": "Name of the static host list",
              "type": "string"
            },
            "description": {
              "description": "Description of the static host list",
              "type": "string"
            },
            "host_format": {
              "title": "HostFormat",
              "description": "Format of the static host list",
              "type": "string",
              "enum": [
                "subnet",
                "regex",
                "list"
              ]
            },
            "host_type": {
              "title": "HostType",
              "description": "Host type of the static host list",
              "type": "string",
              "enum": [
                "IPAddress",
                "MACAddress"
              ]
            },
            "value": {
              "description": "List of static hosts in the selected format",
              "type": "string"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getGETForStaticHostList"
      },
      "task": true
    },
    {
      "name": "patchForStaticHostList",
      "summary": "PATCH_for_StaticHostList",
      "description": "Update some fields of a static host list",
      "input": [
        {
          "name": "staticHostListId",
          "type": "number",
          "info": "Numeric ID of the static host list: 123",
          "required": true,
          "schema": {
            "title": "staticHostListId",
            "type": "number"
          }
        },
        {
          "name": "body",
          "type": "object",
          "info": ": {\"id\": 123, \"name\": \"string\", \"description\": \"string\", \"host_format\": \"Must be one of [subnet, regex, list]\", \"host_type\": \"Must be one of [IPAddress, MACAddress]\", \"value\": \"string\"}",
          "required": true,
          "schema": {
            "title": "StaticHostList",
            "type": "object",
            "properties": {
              "id": {
                "description": "Numeric ID of the static host list",
                "type": "integer",
                "format": "int64"
              },
              "name": {
                "description": "Name of the static host list",
                "type": "string"
              },
              "description": {
                "description": "Description of the static host list",
                "type": "string"
              },
              "host_format": {
                "title": "HostFormat",
                "description": "Format of the static host list",
                "type": "string",
                "enum": [
                  "subnet",
                  "regex",
                  "list"
                ]
              },
              "host_type": {
                "title": "HostType",
                "description": "Host type of the static host list",
                "type": "string",
                "enum": [
                  "IPAddress",
                  "MACAddress"
                ]
              },
              "value": {
                "description": "List of static hosts in the selected format",
                "type": "string"
              }
            }
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "StaticHostList",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the static host list",
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "description": "Name of the static host list",
              "type": "string"
            },
            "description": {
              "description": "Description of the static host list",
              "type": "string"
            },
            "host_format": {
              "title": "HostFormat",
              "description": "Format of the static host list",
              "type": "string",
              "enum": [
                "subnet",
                "regex",
                "list"
              ]
            },
            "host_type": {
              "title": "HostType",
              "description": "Host type of the static host list",
              "type": "string",
              "enum": [
                "IPAddress",
                "MACAddress"
              ]
            },
            "value": {
              "description": "List of static hosts in the selected format",
              "type": "string"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/patchForStaticHostList"
      },
      "task": true
    },
    {
      "name": "putForStaticHostList",
      "summary": "PUT_for_StaticHostList",
      "description": "Replace a static host list",
      "input": [
        {
          "name": "staticHostListId",
          "type": "number",
          "info": "Numeric ID of the static host list: 123",
          "required": true,
          "schema": {
            "title": "staticHostListId",
            "type": "number"
          }
        },
        {
          "name": "body",
          "type": "object",
          "info": ": {\"id\": 123, \"name\": \"string\", \"description\": \"string\", \"host_format\": \"Must be one of [subnet, regex, list]\", \"host_type\": \"Must be one of [IPAddress, MACAddress]\", \"value\": \"string\"}",
          "required": true,
          "schema": {
            "title": "StaticHostList",
            "type": "object",
            "properties": {
              "id": {
                "description": "Numeric ID of the static host list",
                "type": "integer",
                "format": "int64"
              },
              "name": {
                "description": "Name of the static host list",
                "type": "string"
              },
              "description": {
                "description": "Description of the static host list",
                "type": "string"
              },
              "host_format": {
                "title": "HostFormat",
                "description": "Format of the static host list",
                "type": "string",
                "enum": [
                  "subnet",
                  "regex",
                  "list"
                ]
              },
              "host_type": {
                "title": "HostType",
                "description": "Host type of the static host list",
                "type": "string",
                "enum": [
                  "IPAddress",
                  "MACAddress"
                ]
              },
              "value": {
                "description": "List of static hosts in the selected format",
                "type": "string"
              }
            }
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "StaticHostList",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the static host list",
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "description": "Name of the static host list",
              "type": "string"
            },
            "description": {
              "description": "Description of the static host list",
              "type": "string"
            },
            "host_format": {
              "title": "HostFormat",
              "description": "Format of the static host list",
              "type": "string",
              "enum": [
                "subnet",
                "regex",
                "list"
              ]
            },
            "host_type": {
              "title": "HostType",
              "description": "Host type of the static host list",
              "type": "string",
              "enum": [
                "IPAddress",
                "MACAddress"
              ]
            },
            "value": {
              "description": "List of static hosts in the selected format",
              "type": "string"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/putForStaticHostList"
      },
      "task": true
    },
    {
      "name": "deleteForStaticHostList",
      "summary": "DELETE_for_StaticHostList",
      "description": "Delete a static host list",
      "input": [
        {
          "name": "staticHostListId",
          "type": "number",
          "info": "Numeric ID of the static host list: 123",
          "required": true,
          "schema": {
            "title": "staticHostListId",
            "type": "number"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/deleteForStaticHostList"
      },
      "task": true
    },
    {
      "name": "getForStaticHostListByName",
      "summary": "GET_for_StaticHostList_by_name",
      "description": "Get a static host list by name",
      "input": [
        {
          "name": "name",
          "type": "string",
          "info": "Unique name of the static host list: string",
          "required": true,
          "schema": {
            "title": "name",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "StaticHostList",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the static host list",
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "description": "Name of the static host list",
              "type": "string"
            },
            "description": {
              "description": "Description of the static host list",
              "type": "string"
            },
            "host_format": {
              "title": "HostFormat",
              "description": "Format of the static host list",
              "type": "string",
              "enum": [
                "subnet",
                "regex",
                "list"
              ]
            },
            "host_type": {
              "title": "HostType",
              "description": "Host type of the static host list",
              "type": "string",
              "enum": [
                "IPAddress",
                "MACAddress"
              ]
            },
            "value": {
              "description": "List of static hosts in the selected format",
              "type": "string"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getForStaticHostListByName"
      },
      "task": true
    },
    {
      "name": "patchForStaticHostListByName",
      "summary": "PATCH_for_StaticHostList_by_name",
      "description": "Update some fields of a static host list by name",
      "input": [
        {
          "name": "name",
          "type": "string",
          "info": "Unique name of the static host list: string",
          "required": true,
          "schema": {
            "title": "name",
            "type": "string"
          }
        },
        {
          "name": "body",
          "type": "object",
          "info": ": {\"id\": 123, \"name\": \"string\", \"description\": \"string\", \"host_format\": \"Must be one of [subnet, regex, list]\", \"host_type\": \"Must be one of [IPAddress, MACAddress]\", \"value\": \"string\"}",
          "required": true,
          "schema": {
            "title": "StaticHostList",
            "type": "object",
            "properties": {
              "id": {
                "description": "Numeric ID of the static host list",
                "type": "integer",
                "format": "int64"
              },
              "name": {
                "description": "Name of the static host list",
                "type": "string"
              },
              "description": {
                "description": "Description of the static host list",
                "type": "string"
              },
              "host_format": {
                "title": "HostFormat",
                "description": "Format of the static host list",
                "type": "string",
                "enum": [
                  "subnet",
                  "regex",
                  "list"
                ]
              },
              "host_type": {
                "title": "HostType",
                "description": "Host type of the static host list",
                "type": "string",
                "enum": [
                  "IPAddress",
                  "MACAddress"
                ]
              },
              "value": {
                "description": "List of static hosts in the selected format",
                "type": "string"
              }
            }
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "StaticHostList",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the static host list",
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "description": "Name of the static host list",
              "type": "string"
            },
            "description": {
              "description": "Description of the static host list",
              "type": "string"
            },
            "host_format": {
              "title": "HostFormat",
              "description": "Format of the static host list",
              "type": "string",
              "enum": [
                "subnet",
                "regex",
                "list"
              ]
            },
            "host_type": {
              "title": "HostType",
              "description": "Host type of the static host list",
              "type": "string",
              "enum": [
                "IPAddress",
                "MACAddress"
              ]
            },
            "value": {
              "description": "List of static hosts in the selected format",
              "type": "string"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/patchForStaticHostListByName"
      },
      "task": true
    },
    {
      "name": "putForStaticHostListByName",
      "summary": "PUT_for_StaticHostList_by_name",
      "description": "Replace a static host list by name",
      "input": [
        {
          "name": "name",
          "type": "string",
          "info": "Unique name of the static host list: string",
          "required": true,
          "schema": {
            "title": "name",
            "type": "string"
          }
        },
        {
          "name": "body",
          "type": "object",
          "info": ": {\"id\": 123, \"name\": \"string\", \"description\": \"string\", \"host_format\": \"Must be one of [subnet, regex, list]\", \"host_type\": \"Must be one of [IPAddress, MACAddress]\", \"value\": \"string\"}",
          "required": true,
          "schema": {
            "title": "StaticHostList",
            "type": "object",
            "properties": {
              "id": {
                "description": "Numeric ID of the static host list",
                "type": "integer",
                "format": "int64"
              },
              "name": {
                "description": "Name of the static host list",
                "type": "string"
              },
              "description": {
                "description": "Description of the static host list",
                "type": "string"
              },
              "host_format": {
                "title": "HostFormat",
                "description": "Format of the static host list",
                "type": "string",
                "enum": [
                  "subnet",
                  "regex",
                  "list"
                ]
              },
              "host_type": {
                "title": "HostType",
                "description": "Host type of the static host list",
                "type": "string",
                "enum": [
                  "IPAddress",
                  "MACAddress"
                ]
              },
              "value": {
                "description": "List of static hosts in the selected format",
                "type": "string"
              }
            }
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "StaticHostList",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the static host list",
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "description": "Name of the static host list",
              "type": "string"
            },
            "description": {
              "description": "Description of the static host list",
              "type": "string"
            },
            "host_format": {
              "title": "HostFormat",
              "description": "Format of the static host list",
              "type": "string",
              "enum": [
                "subnet",
                "regex",
                "list"
              ]
            },
            "host_type": {
              "title": "HostType",
              "description": "Host type of the static host list",
              "type": "string",
              "enum": [
                "IPAddress",
                "MACAddress"
              ]
            },
            "value": {
              "description": "List of static hosts in the selected format",
              "type": "string"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/putForStaticHostListByName"
      },
      "task": true
    },
    {
      "name": "deleteForStaticHostListByName",
      "summary": "DELETE_for_StaticHostList_by_name",
      "description": "Delete a static host list by name",
      "input": [
        {
          "name": "name",
          "type": "string",
          "info": "Unique name of the static host list: string",
          "required": true,
          "schema": {
            "title": "name",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/deleteForStaticHostListByName"
      },
      "task": true
    },
    {
      "name": "getForRole",
      "summary": "GET_for_Role",
      "description": "Get a list of roles",
      "input": [
        {
          "name": "filter",
          "type": "string",
          "info": "JSON filter expression specifying the items to return: string",
          "required": false,
          "schema": {
            "title": "filter",
            "type": "string"
          }
        },
        {
          "name": "sort",
          "type": "string",
          "info": "Sort ordering for returned items: string",
          "required": false,
          "schema": {
            "title": "sort",
            "type": "string"
          }
        },
        {
          "name": "offset",
          "type": "number",
          "info": "Zero based offset to start from: 123",
          "required": false,
          "schema": {
            "title": "offset",
            "type": "number"
          }
        },
        {
          "name": "limit",
          "type": "number",
          "info": "Maximum number of items to return (1 – 1000): 123",
          "required": false,
          "schema": {
            "title": "limit",
            "type": "number"
          }
        },
        {
          "name": "calculateCount",
          "type": "boolean",
          "info": "Whether to calculate the total item count: boolean",
          "required": false,
          "schema": {
            "title": "calculateCount",
            "type": "boolean"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "RoleList",
          "type": "object",
          "properties": {
            "_embedded": {
              "title": "RoleItems",
              "type": "object",
              "properties": {
                "items": {
                  "description": "List of items matching the filter",
                  "type": "array",
                  "items": {
                    "title": "Role",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Numeric ID of the role",
                        "type": "integer",
                        "format": "int64"
                      },
                      "name": {
                        "description": "Name of the role",
                        "type": "string"
                      },
                      "description": {
                        "description": "Description of the role",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": [
                "items"
              ]
            },
            "_links": {
              "title": "HalLinks",
              "type": "object",
              "properties": {
                "self": {
                  "description": "URL of result",
                  "type": "string"
                },
                "first": {
                  "description": "URL of first page of results",
                  "type": "string"
                },
                "last": {
                  "description": "URL of last page of results",
                  "type": "string"
                },
                "prev": {
                  "description": "URL of previous page of results",
                  "type": "string"
                },
                "next": {
                  "description": "URL of next page of results",
                  "type": "string"
                }
              },
              "required": [
                "self",
                "first"
              ]
            },
            "count": {
              "description": "Total number of items matching the filter; returned if calculate_count is true",
              "type": "integer",
              "format": "int64"
            }
          },
          "required": [
            "_embedded",
            "_links"
          ]
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getForRole"
      },
      "task": true
    },
    {
      "name": "postForRole",
      "summary": "POST_for_Role",
      "description": "Create a new role",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": ": {\"id\": 123, \"name\": \"string\", \"description\": \"string\"}",
          "required": true,
          "schema": {
            "title": "Role",
            "type": "object",
            "properties": {
              "id": {
                "description": "Numeric ID of the role",
                "type": "integer",
                "format": "int64"
              },
              "name": {
                "description": "Name of the role",
                "type": "string"
              },
              "description": {
                "description": "Description of the role",
                "type": "string"
              }
            }
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "Role",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the role",
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "description": "Name of the role",
              "type": "string"
            },
            "description": {
              "description": "Description of the role",
              "type": "string"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/postForRole"
      },
      "task": true
    },
    {
      "name": "getGETForRole",
      "summary": "GET_for_Role",
      "description": "Get a role",
      "input": [
        {
          "name": "roleId",
          "type": "number",
          "info": "Numeric ID of the role: 123",
          "required": true,
          "schema": {
            "title": "roleId",
            "type": "number"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "Role",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the role",
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "description": "Name of the role",
              "type": "string"
            },
            "description": {
              "description": "Description of the role",
              "type": "string"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getGETForRole"
      },
      "task": true
    },
    {
      "name": "patchForRole",
      "summary": "PATCH_for_Role",
      "description": "Update some fields of a role",
      "input": [
        {
          "name": "roleId",
          "type": "number",
          "info": "Numeric ID of the role: 123",
          "required": true,
          "schema": {
            "title": "roleId",
            "type": "number"
          }
        },
        {
          "name": "body",
          "type": "object",
          "info": ": {\"id\": 123, \"name\": \"string\", \"description\": \"string\"}",
          "required": true,
          "schema": {
            "title": "Role",
            "type": "object",
            "properties": {
              "id": {
                "description": "Numeric ID of the role",
                "type": "integer",
                "format": "int64"
              },
              "name": {
                "description": "Name of the role",
                "type": "string"
              },
              "description": {
                "description": "Description of the role",
                "type": "string"
              }
            }
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "Role",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the role",
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "description": "Name of the role",
              "type": "string"
            },
            "description": {
              "description": "Description of the role",
              "type": "string"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/patchForRole"
      },
      "task": true
    },
    {
      "name": "putForRole",
      "summary": "PUT_for_Role",
      "description": "Replace a role",
      "input": [
        {
          "name": "roleId",
          "type": "number",
          "info": "Numeric ID of the role: 123",
          "required": true,
          "schema": {
            "title": "roleId",
            "type": "number"
          }
        },
        {
          "name": "body",
          "type": "object",
          "info": ": {\"id\": 123, \"name\": \"string\", \"description\": \"string\"}",
          "required": true,
          "schema": {
            "title": "Role",
            "type": "object",
            "properties": {
              "id": {
                "description": "Numeric ID of the role",
                "type": "integer",
                "format": "int64"
              },
              "name": {
                "description": "Name of the role",
                "type": "string"
              },
              "description": {
                "description": "Description of the role",
                "type": "string"
              }
            }
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "Role",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the role",
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "description": "Name of the role",
              "type": "string"
            },
            "description": {
              "description": "Description of the role",
              "type": "string"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/putForRole"
      },
      "task": true
    },
    {
      "name": "deleteForRole",
      "summary": "DELETE_for_Role",
      "description": "Delete a role",
      "input": [
        {
          "name": "roleId",
          "type": "number",
          "info": "Numeric ID of the role: 123",
          "required": true,
          "schema": {
            "title": "roleId",
            "type": "number"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/deleteForRole"
      },
      "task": true
    },
    {
      "name": "getForRoleByName",
      "summary": "GET_for_Role_by_name",
      "description": "Get a role by name",
      "input": [
        {
          "name": "name",
          "type": "string",
          "info": "Unique name of the role: string",
          "required": true,
          "schema": {
            "title": "name",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "Role",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the role",
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "description": "Name of the role",
              "type": "string"
            },
            "description": {
              "description": "Description of the role",
              "type": "string"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getForRoleByName"
      },
      "task": true
    },
    {
      "name": "patchForRoleByName",
      "summary": "PATCH_for_Role_by_name",
      "description": "Update some fields of a role by name",
      "input": [
        {
          "name": "name",
          "type": "string",
          "info": "Unique name of the role: string",
          "required": true,
          "schema": {
            "title": "name",
            "type": "string"
          }
        },
        {
          "name": "body",
          "type": "object",
          "info": ": {\"id\": 123, \"name\": \"string\", \"description\": \"string\"}",
          "required": true,
          "schema": {
            "title": "Role",
            "type": "object",
            "properties": {
              "id": {
                "description": "Numeric ID of the role",
                "type": "integer",
                "format": "int64"
              },
              "name": {
                "description": "Name of the role",
                "type": "string"
              },
              "description": {
                "description": "Description of the role",
                "type": "string"
              }
            }
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "Role",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the role",
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "description": "Name of the role",
              "type": "string"
            },
            "description": {
              "description": "Description of the role",
              "type": "string"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/patchForRoleByName"
      },
      "task": true
    },
    {
      "name": "putForRoleByName",
      "summary": "PUT_for_Role_by_name",
      "description": "Replace a role by name",
      "input": [
        {
          "name": "name",
          "type": "string",
          "info": "Unique name of the role: string",
          "required": true,
          "schema": {
            "title": "name",
            "type": "string"
          }
        },
        {
          "name": "body",
          "type": "object",
          "info": ": {\"id\": 123, \"name\": \"string\", \"description\": \"string\"}",
          "required": true,
          "schema": {
            "title": "Role",
            "type": "object",
            "properties": {
              "id": {
                "description": "Numeric ID of the role",
                "type": "integer",
                "format": "int64"
              },
              "name": {
                "description": "Name of the role",
                "type": "string"
              },
              "description": {
                "description": "Description of the role",
                "type": "string"
              }
            }
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "Role",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the role",
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "description": "Name of the role",
              "type": "string"
            },
            "description": {
              "description": "Description of the role",
              "type": "string"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/putForRoleByName"
      },
      "task": true
    },
    {
      "name": "deleteForRoleByName",
      "summary": "DELETE_for_Role_by_name",
      "description": "Delete a role by name",
      "input": [
        {
          "name": "name",
          "type": "string",
          "info": "Unique name of the role: string",
          "required": true,
          "schema": {
            "title": "name",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/deleteForRoleByName"
      },
      "task": true
    },
    {
      "name": "getForLocalUserPasswordPolicy",
      "summary": "GET_for_LocalUserPasswordPolicy",
      "description": "Get the local user password policy",
      "input": [],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "LocalUserPasswordPolicy",
          "type": "object",
          "properties": {
            "password_minimum_length": {
              "description": "(Acceptable values are: \"1-128\")",
              "type": "integer",
              "default": "1-128",
              "format": "int32"
            },
            "password_complexity": {
              "title": "PasswordComplexity",
              "description": "Complexity Level of the password",
              "type": "string",
              "enum": [
                "NONE",
                "CASE",
                "NUMBER",
                "ALPHANUMERIC",
                "CASENUMERIC",
                "PUNCTUATION",
                "COMPLEX"
              ]
            },
            "password_disallowed_characters": {
              "description": "Disallowed characters in the password",
              "type": "string"
            },
            "password_disallowed_words": {
              "description": "Disallowed words in the password",
              "type": "string"
            },
            "password_prohibit_user_id": {
              "description": "May not contain User ID or its characters in reversed order",
              "type": "boolean"
            },
            "password_prohibit_repeated_chars": {
              "description": "May not contain repeated character four or more times consecutively",
              "type": "boolean"
            },
            "password_expiry_days": {
              "description": "(Acceptable values are: \"0-500\")",
              "type": "integer",
              "default": "0-500",
              "format": "int32"
            },
            "password_remember_history": {
              "description": "(Acceptable values are: \"1-99\")",
              "type": "integer",
              "default": "1-99",
              "format": "int32"
            },
            "reminder_days": {
              "description": "(Acceptable values are: \"1-365\")",
              "type": "integer",
              "default": "1-365",
              "format": "int32"
            },
            "reminder_message": {
              "description": "Reminder message to be displayed",
              "type": "string"
            },
            "disable_after_days": {
              "description": "(Acceptable values are: \"1-1000\")",
              "type": "integer",
              "default": "1-1000",
              "format": "int32"
            },
            "disable_after_date": {
              "title": "DisableAfterDate",
              "description": "Disable after Date Exceeds",
              "type": "string",
              "enum": [
                "yyyy-mm-dd"
              ]
            },
            "disable_after_unchanged_days": {
              "description": "(Acceptable values are: \"1-365\")",
              "type": "integer",
              "default": "1-365",
              "format": "int32"
            },
            "disable_after_failed_attempts": {
              "description": "(Acceptable values are: \"1-100\")",
              "type": "integer",
              "default": "1-100",
              "format": "int32"
            },
            "reset_failed_attempts_count": {
              "description": "Reset failed attempts count and enable those users",
              "type": "boolean"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "GET",
        "path": "/getForLocalUserPasswordPolicy"
      },
      "task": true
    },
    {
      "name": "putForLocalUserPasswordPolicy",
      "summary": "PUT_for_LocalUserPasswordPolicy",
      "description": "Put the local user password policy",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": ": {\"password_minimum_length\": 123, \"password_complexity\": \"Must be one of [NONE, CASE, NUMBER, ALPHANUMERIC, CASENUMERIC, PUNCTUATION, COMPLEX]\", \"password_disallowed_characters\": \"string\", \"password_disallowed_words\": \"string\", \"password_prohibit_user_id\": \"boolean\", \"password_prohibit_repeated_chars\": \"boolean\", \"password_expiry_days\": 123, \"password_remember_history\": 123, \"reminder_days\": 123, \"reminder_message\": \"string\", \"disable_after_days\": 123, \"disable_after_date\": \"Must be one of [yyyy-mm-dd]\", \"disable_after_unchanged_days\": 123, \"disable_after_failed_attempts\": 123, \"reset_failed_attempts_count\": \"boolean\"}",
          "required": true,
          "schema": {
            "title": "LocalUserPasswordPolicy",
            "type": "object",
            "properties": {
              "password_minimum_length": {
                "description": "(Acceptable values are: \"1-128\")",
                "type": "integer",
                "default": "1-128",
                "format": "int32"
              },
              "password_complexity": {
                "title": "PasswordComplexity",
                "description": "Complexity Level of the password",
                "type": "string",
                "enum": [
                  "NONE",
                  "CASE",
                  "NUMBER",
                  "ALPHANUMERIC",
                  "CASENUMERIC",
                  "PUNCTUATION",
                  "COMPLEX"
                ]
              },
              "password_disallowed_characters": {
                "description": "Disallowed characters in the password",
                "type": "string"
              },
              "password_disallowed_words": {
                "description": "Disallowed words in the password",
                "type": "string"
              },
              "password_prohibit_user_id": {
                "description": "May not contain User ID or its characters in reversed order",
                "type": "boolean"
              },
              "password_prohibit_repeated_chars": {
                "description": "May not contain repeated character four or more times consecutively",
                "type": "boolean"
              },
              "password_expiry_days": {
                "description": "(Acceptable values are: \"0-500\")",
                "type": "integer",
                "default": "0-500",
                "format": "int32"
              },
              "password_remember_history": {
                "description": "(Acceptable values are: \"1-99\")",
                "type": "integer",
                "default": "1-99",
                "format": "int32"
              },
              "reminder_days": {
                "description": "(Acceptable values are: \"1-365\")",
                "type": "integer",
                "default": "1-365",
                "format": "int32"
              },
              "reminder_message": {
                "description": "Reminder message to be displayed",
                "type": "string"
              },
              "disable_after_days": {
                "description": "(Acceptable values are: \"1-1000\")",
                "type": "integer",
                "default": "1-1000",
                "format": "int32"
              },
              "disable_after_date": {
                "title": "DisableAfterDate",
                "description": "Disable after Date Exceeds",
                "type": "string",
                "enum": [
                  "yyyy-mm-dd"
                ]
              },
              "disable_after_unchanged_days": {
                "description": "(Acceptable values are: \"1-365\")",
                "type": "integer",
                "default": "1-365",
                "format": "int32"
              },
              "disable_after_failed_attempts": {
                "description": "(Acceptable values are: \"1-100\")",
                "type": "integer",
                "default": "1-100",
                "format": "int32"
              },
              "reset_failed_attempts_count": {
                "description": "Reset failed attempts count and enable those users",
                "type": "boolean"
              }
            }
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "LocalUserPasswordPolicy",
          "type": "object",
          "properties": {
            "password_minimum_length": {
              "description": "(Acceptable values are: \"1-128\")",
              "type": "integer",
              "default": "1-128",
              "format": "int32"
            },
            "password_complexity": {
              "title": "PasswordComplexity",
              "description": "Complexity Level of the password",
              "type": "string",
              "enum": [
                "NONE",
                "CASE",
                "NUMBER",
                "ALPHANUMERIC",
                "CASENUMERIC",
                "PUNCTUATION",
                "COMPLEX"
              ]
            },
            "password_disallowed_characters": {
              "description": "Disallowed characters in the password",
              "type": "string"
            },
            "password_disallowed_words": {
              "description": "Disallowed words in the password",
              "type": "string"
            },
            "password_prohibit_user_id": {
              "description": "May not contain User ID or its characters in reversed order",
              "type": "boolean"
            },
            "password_prohibit_repeated_chars": {
              "description": "May not contain repeated character four or more times consecutively",
              "type": "boolean"
            },
            "password_expiry_days": {
              "description": "(Acceptable values are: \"0-500\")",
              "type": "integer",
              "default": "0-500",
              "format": "int32"
            },
            "password_remember_history": {
              "description": "(Acceptable values are: \"1-99\")",
              "type": "integer",
              "default": "1-99",
              "format": "int32"
            },
            "reminder_days": {
              "description": "(Acceptable values are: \"1-365\")",
              "type": "integer",
              "default": "1-365",
              "format": "int32"
            },
            "reminder_message": {
              "description": "Reminder message to be displayed",
              "type": "string"
            },
            "disable_after_days": {
              "description": "(Acceptable values are: \"1-1000\")",
              "type": "integer",
              "default": "1-1000",
              "format": "int32"
            },
            "disable_after_date": {
              "title": "DisableAfterDate",
              "description": "Disable after Date Exceeds",
              "type": "string",
              "enum": [
                "yyyy-mm-dd"
              ]
            },
            "disable_after_unchanged_days": {
              "description": "(Acceptable values are: \"1-365\")",
              "type": "integer",
              "default": "1-365",
              "format": "int32"
            },
            "disable_after_failed_attempts": {
              "description": "(Acceptable values are: \"1-100\")",
              "type": "integer",
              "default": "1-100",
              "format": "int32"
            },
            "reset_failed_attempts_count": {
              "description": "Reset failed attempts count and enable those users",
              "type": "boolean"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/putForLocalUserPasswordPolicy"
      },
      "task": true
    },
    {
      "name": "patchForLocalUserPasswordPolicy",
      "summary": "PATCH_for_LocalUserPasswordPolicy",
      "description": "Patch the local user password policy",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": ": {\"password_minimum_length\": 123, \"password_complexity\": \"Must be one of [NONE, CASE, NUMBER, ALPHANUMERIC, CASENUMERIC, PUNCTUATION, COMPLEX]\", \"password_disallowed_characters\": \"string\", \"password_disallowed_words\": \"string\", \"password_prohibit_user_id\": \"boolean\", \"password_prohibit_repeated_chars\": \"boolean\", \"password_expiry_days\": 123, \"password_remember_history\": 123, \"reminder_days\": 123, \"reminder_message\": \"string\", \"disable_after_days\": 123, \"disable_after_date\": \"Must be one of [yyyy-mm-dd]\", \"disable_after_unchanged_days\": 123, \"disable_after_failed_attempts\": 123, \"reset_failed_attempts_count\": \"boolean\"}",
          "required": true,
          "schema": {
            "title": "LocalUserPasswordPolicy",
            "type": "object",
            "properties": {
              "password_minimum_length": {
                "description": "(Acceptable values are: \"1-128\")",
                "type": "integer",
                "default": "1-128",
                "format": "int32"
              },
              "password_complexity": {
                "title": "PasswordComplexity",
                "description": "Complexity Level of the password",
                "type": "string",
                "enum": [
                  "NONE",
                  "CASE",
                  "NUMBER",
                  "ALPHANUMERIC",
                  "CASENUMERIC",
                  "PUNCTUATION",
                  "COMPLEX"
                ]
              },
              "password_disallowed_characters": {
                "description": "Disallowed characters in the password",
                "type": "string"
              },
              "password_disallowed_words": {
                "description": "Disallowed words in the password",
                "type": "string"
              },
              "password_prohibit_user_id": {
                "description": "May not contain User ID or its characters in reversed order",
                "type": "boolean"
              },
              "password_prohibit_repeated_chars": {
                "description": "May not contain repeated character four or more times consecutively",
                "type": "boolean"
              },
              "password_expiry_days": {
                "description": "(Acceptable values are: \"0-500\")",
                "type": "integer",
                "default": "0-500",
                "format": "int32"
              },
              "password_remember_history": {
                "description": "(Acceptable values are: \"1-99\")",
                "type": "integer",
                "default": "1-99",
                "format": "int32"
              },
              "reminder_days": {
                "description": "(Acceptable values are: \"1-365\")",
                "type": "integer",
                "default": "1-365",
                "format": "int32"
              },
              "reminder_message": {
                "description": "Reminder message to be displayed",
                "type": "string"
              },
              "disable_after_days": {
                "description": "(Acceptable values are: \"1-1000\")",
                "type": "integer",
                "default": "1-1000",
                "format": "int32"
              },
              "disable_after_date": {
                "title": "DisableAfterDate",
                "description": "Disable after Date Exceeds",
                "type": "string",
                "enum": [
                  "yyyy-mm-dd"
                ]
              },
              "disable_after_unchanged_days": {
                "description": "(Acceptable values are: \"1-365\")",
                "type": "integer",
                "default": "1-365",
                "format": "int32"
              },
              "disable_after_failed_attempts": {
                "description": "(Acceptable values are: \"1-100\")",
                "type": "integer",
                "default": "1-100",
                "format": "int32"
              },
              "reset_failed_attempts_count": {
                "description": "Reset failed attempts count and enable those users",
                "type": "boolean"
              }
            }
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "LocalUserPasswordPolicy",
          "type": "object",
          "properties": {
            "password_minimum_length": {
              "description": "(Acceptable values are: \"1-128\")",
              "type": "integer",
              "default": "1-128",
              "format": "int32"
            },
            "password_complexity": {
              "title": "PasswordComplexity",
              "description": "Complexity Level of the password",
              "type": "string",
              "enum": [
                "NONE",
                "CASE",
                "NUMBER",
                "ALPHANUMERIC",
                "CASENUMERIC",
                "PUNCTUATION",
                "COMPLEX"
              ]
            },
            "password_disallowed_characters": {
              "description": "Disallowed characters in the password",
              "type": "string"
            },
            "password_disallowed_words": {
              "description": "Disallowed words in the password",
              "type": "string"
            },
            "password_prohibit_user_id": {
              "description": "May not contain User ID or its characters in reversed order",
              "type": "boolean"
            },
            "password_prohibit_repeated_chars": {
              "description": "May not contain repeated character four or more times consecutively",
              "type": "boolean"
            },
            "password_expiry_days": {
              "description": "(Acceptable values are: \"0-500\")",
              "type": "integer",
              "default": "0-500",
              "format": "int32"
            },
            "password_remember_history": {
              "description": "(Acceptable values are: \"1-99\")",
              "type": "integer",
              "default": "1-99",
              "format": "int32"
            },
            "reminder_days": {
              "description": "(Acceptable values are: \"1-365\")",
              "type": "integer",
              "default": "1-365",
              "format": "int32"
            },
            "reminder_message": {
              "description": "Reminder message to be displayed",
              "type": "string"
            },
            "disable_after_days": {
              "description": "(Acceptable values are: \"1-1000\")",
              "type": "integer",
              "default": "1-1000",
              "format": "int32"
            },
            "disable_after_date": {
              "title": "DisableAfterDate",
              "description": "Disable after Date Exceeds",
              "type": "string",
              "enum": [
                "yyyy-mm-dd"
              ]
            },
            "disable_after_unchanged_days": {
              "description": "(Acceptable values are: \"1-365\")",
              "type": "integer",
              "default": "1-365",
              "format": "int32"
            },
            "disable_after_failed_attempts": {
              "description": "(Acceptable values are: \"1-100\")",
              "type": "integer",
              "default": "1-100",
              "format": "int32"
            },
            "reset_failed_attempts_count": {
              "description": "Reset failed attempts count and enable those users",
              "type": "boolean"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/patchForLocalUserPasswordPolicy"
      },
      "task": true
    },
    {
      "name": "getForLocalUser",
      "summary": "GET_for_LocalUser",
      "description": "Get a list of local users",
      "input": [
        {
          "name": "filter",
          "type": "string",
          "info": "JSON filter expression specifying the items to return: string",
          "required": false,
          "schema": {
            "title": "filter",
            "type": "string"
          }
        },
        {
          "name": "sort",
          "type": "string",
          "info": "Sort ordering for returned items: string",
          "required": false,
          "schema": {
            "title": "sort",
            "type": "string"
          }
        },
        {
          "name": "offset",
          "type": "number",
          "info": "Zero based offset to start from: 123",
          "required": false,
          "schema": {
            "title": "offset",
            "type": "number"
          }
        },
        {
          "name": "limit",
          "type": "number",
          "info": "Maximum number of items to return (1 – 1000): 123",
          "required": false,
          "schema": {
            "title": "limit",
            "type": "number"
          }
        },
        {
          "name": "calculateCount",
          "type": "boolean",
          "info": "Whether to calculate the total item count: boolean",
          "required": false,
          "schema": {
            "title": "calculateCount",
            "type": "boolean"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "LocalUserList",
          "type": "object",
          "properties": {
            "_embedded": {
              "title": "LocalUserItems",
              "type": "object",
              "properties": {
                "items": {
                  "description": "List of items matching the filter",
                  "type": "array",
                  "items": {
                    "title": "LocalUser",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Numeric ID of the local user",
                        "type": "integer",
                        "format": "int64"
                      },
                      "user_id": {
                        "description": "Unique user id of the local user",
                        "type": "string"
                      },
                      "password": {
                        "description": "Password of the local user",
                        "type": "string"
                      },
                      "username": {
                        "description": "User name of the local user",
                        "type": "string"
                      },
                      "role_name": {
                        "description": "Role name of the local user",
                        "type": "string"
                      },
                      "enabled": {
                        "description": "Flag indicating if the account is enabled",
                        "type": "boolean"
                      },
                      "change_pwd_next_login": {
                        "description": "Flag indicating if the password change is required in next login",
                        "type": "boolean"
                      },
                      "attributes": {
                        "description": "Additional attributes(key/value pairs) may be stored with the local user account",
                        "type": "object"
                      }
                    }
                  }
                }
              },
              "required": [
                "items"
              ]
            },
            "_links": {
              "title": "HalLinks",
              "type": "object",
              "properties": {
                "self": {
                  "description": "URL of result",
                  "type": "string"
                },
                "first": {
                  "description": "URL of first page of results",
                  "type": "string"
                },
                "last": {
                  "description": "URL of last page of results",
                  "type": "string"
                },
                "prev": {
                  "description": "URL of previous page of results",
                  "type": "string"
                },
                "next": {
                  "description": "URL of next page of results",
                  "type": "string"
                }
              },
              "required": [
                "self",
                "first"
              ]
            },
            "count": {
              "description": "Total number of items matching the filter; returned if calculate_count is true",
              "type": "integer",
              "format": "int64"
            }
          },
          "required": [
            "_embedded",
            "_links"
          ]
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getForLocalUser"
      },
      "task": true
    },
    {
      "name": "postForLocalUser",
      "summary": "POST_for_LocalUser",
      "description": "Create a new local user",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": ": {\"id\": 123, \"user_id\": \"string\", \"password\": \"string\", \"username\": \"string\", \"role_name\": \"string\", \"enabled\": \"boolean\", \"change_pwd_next_login\": \"boolean\", \"attributes\": \"object\"}",
          "required": true,
          "schema": {
            "title": "LocalUser",
            "type": "object",
            "properties": {
              "id": {
                "description": "Numeric ID of the local user",
                "type": "integer",
                "format": "int64"
              },
              "user_id": {
                "description": "Unique user id of the local user",
                "type": "string"
              },
              "password": {
                "description": "Password of the local user",
                "type": "string"
              },
              "username": {
                "description": "User name of the local user",
                "type": "string"
              },
              "role_name": {
                "description": "Role name of the local user",
                "type": "string"
              },
              "enabled": {
                "description": "Flag indicating if the account is enabled",
                "type": "boolean"
              },
              "change_pwd_next_login": {
                "description": "Flag indicating if the password change is required in next login",
                "type": "boolean"
              },
              "attributes": {
                "description": "Additional attributes(key/value pairs) may be stored with the local user account",
                "type": "object"
              }
            }
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "LocalUser",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the local user",
              "type": "integer",
              "format": "int64"
            },
            "user_id": {
              "description": "Unique user id of the local user",
              "type": "string"
            },
            "password": {
              "description": "Password of the local user",
              "type": "string"
            },
            "username": {
              "description": "User name of the local user",
              "type": "string"
            },
            "role_name": {
              "description": "Role name of the local user",
              "type": "string"
            },
            "enabled": {
              "description": "Flag indicating if the account is enabled",
              "type": "boolean"
            },
            "change_pwd_next_login": {
              "description": "Flag indicating if the password change is required in next login",
              "type": "boolean"
            },
            "attributes": {
              "description": "Additional attributes(key/value pairs) may be stored with the local user account",
              "type": "object"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/postForLocalUser"
      },
      "task": true
    },
    {
      "name": "getGETForLocalUser",
      "summary": "GET_for_LocalUser",
      "description": "Get a local user",
      "input": [
        {
          "name": "localUserId",
          "type": "number",
          "info": "Numeric ID of the local user: 123",
          "required": true,
          "schema": {
            "title": "localUserId",
            "type": "number"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "LocalUser",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the local user",
              "type": "integer",
              "format": "int64"
            },
            "user_id": {
              "description": "Unique user id of the local user",
              "type": "string"
            },
            "password": {
              "description": "Password of the local user",
              "type": "string"
            },
            "username": {
              "description": "User name of the local user",
              "type": "string"
            },
            "role_name": {
              "description": "Role name of the local user",
              "type": "string"
            },
            "enabled": {
              "description": "Flag indicating if the account is enabled",
              "type": "boolean"
            },
            "change_pwd_next_login": {
              "description": "Flag indicating if the password change is required in next login",
              "type": "boolean"
            },
            "attributes": {
              "description": "Additional attributes(key/value pairs) may be stored with the local user account",
              "type": "object"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getGETForLocalUser"
      },
      "task": true
    },
    {
      "name": "patchForLocalUser",
      "summary": "PATCH_for_LocalUser",
      "description": "Update some fields of a local user",
      "input": [
        {
          "name": "localUserId",
          "type": "number",
          "info": "Numeric ID of the local user: 123",
          "required": true,
          "schema": {
            "title": "localUserId",
            "type": "number"
          }
        },
        {
          "name": "body",
          "type": "object",
          "info": ": {\"id\": 123, \"user_id\": \"string\", \"password\": \"string\", \"username\": \"string\", \"role_name\": \"string\", \"enabled\": \"boolean\", \"change_pwd_next_login\": \"boolean\", \"attributes\": \"object\"}",
          "required": true,
          "schema": {
            "title": "LocalUser",
            "type": "object",
            "properties": {
              "id": {
                "description": "Numeric ID of the local user",
                "type": "integer",
                "format": "int64"
              },
              "user_id": {
                "description": "Unique user id of the local user",
                "type": "string"
              },
              "password": {
                "description": "Password of the local user",
                "type": "string"
              },
              "username": {
                "description": "User name of the local user",
                "type": "string"
              },
              "role_name": {
                "description": "Role name of the local user",
                "type": "string"
              },
              "enabled": {
                "description": "Flag indicating if the account is enabled",
                "type": "boolean"
              },
              "change_pwd_next_login": {
                "description": "Flag indicating if the password change is required in next login",
                "type": "boolean"
              },
              "attributes": {
                "description": "Additional attributes(key/value pairs) may be stored with the local user account",
                "type": "object"
              }
            }
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "LocalUser",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the local user",
              "type": "integer",
              "format": "int64"
            },
            "user_id": {
              "description": "Unique user id of the local user",
              "type": "string"
            },
            "password": {
              "description": "Password of the local user",
              "type": "string"
            },
            "username": {
              "description": "User name of the local user",
              "type": "string"
            },
            "role_name": {
              "description": "Role name of the local user",
              "type": "string"
            },
            "enabled": {
              "description": "Flag indicating if the account is enabled",
              "type": "boolean"
            },
            "change_pwd_next_login": {
              "description": "Flag indicating if the password change is required in next login",
              "type": "boolean"
            },
            "attributes": {
              "description": "Additional attributes(key/value pairs) may be stored with the local user account",
              "type": "object"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/patchForLocalUser"
      },
      "task": true
    },
    {
      "name": "putForLocalUser",
      "summary": "PUT_for_LocalUser",
      "description": "Replace a local user",
      "input": [
        {
          "name": "localUserId",
          "type": "number",
          "info": "Numeric ID of the local user: 123",
          "required": true,
          "schema": {
            "title": "localUserId",
            "type": "number"
          }
        },
        {
          "name": "body",
          "type": "object",
          "info": ": {\"id\": 123, \"user_id\": \"string\", \"password\": \"string\", \"username\": \"string\", \"role_name\": \"string\", \"enabled\": \"boolean\", \"change_pwd_next_login\": \"boolean\", \"attributes\": \"object\"}",
          "required": true,
          "schema": {
            "title": "LocalUser",
            "type": "object",
            "properties": {
              "id": {
                "description": "Numeric ID of the local user",
                "type": "integer",
                "format": "int64"
              },
              "user_id": {
                "description": "Unique user id of the local user",
                "type": "string"
              },
              "password": {
                "description": "Password of the local user",
                "type": "string"
              },
              "username": {
                "description": "User name of the local user",
                "type": "string"
              },
              "role_name": {
                "description": "Role name of the local user",
                "type": "string"
              },
              "enabled": {
                "description": "Flag indicating if the account is enabled",
                "type": "boolean"
              },
              "change_pwd_next_login": {
                "description": "Flag indicating if the password change is required in next login",
                "type": "boolean"
              },
              "attributes": {
                "description": "Additional attributes(key/value pairs) may be stored with the local user account",
                "type": "object"
              }
            }
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "LocalUser",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the local user",
              "type": "integer",
              "format": "int64"
            },
            "user_id": {
              "description": "Unique user id of the local user",
              "type": "string"
            },
            "password": {
              "description": "Password of the local user",
              "type": "string"
            },
            "username": {
              "description": "User name of the local user",
              "type": "string"
            },
            "role_name": {
              "description": "Role name of the local user",
              "type": "string"
            },
            "enabled": {
              "description": "Flag indicating if the account is enabled",
              "type": "boolean"
            },
            "change_pwd_next_login": {
              "description": "Flag indicating if the password change is required in next login",
              "type": "boolean"
            },
            "attributes": {
              "description": "Additional attributes(key/value pairs) may be stored with the local user account",
              "type": "object"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/putForLocalUser"
      },
      "task": true
    },
    {
      "name": "deleteForLocalUser",
      "summary": "DELETE_for_LocalUser",
      "description": "Delete a local user",
      "input": [
        {
          "name": "localUserId",
          "type": "number",
          "info": "Numeric ID of the local user: 123",
          "required": true,
          "schema": {
            "title": "localUserId",
            "type": "number"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/deleteForLocalUser"
      },
      "task": true
    },
    {
      "name": "getForLocalUserByUserId",
      "summary": "GET_for_LocalUser_by_user_id",
      "description": "Get a local user by user_id",
      "input": [
        {
          "name": "userId",
          "type": "string",
          "info": "Unique user_id of the local user: string",
          "required": true,
          "schema": {
            "title": "userId",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "LocalUser",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the local user",
              "type": "integer",
              "format": "int64"
            },
            "user_id": {
              "description": "Unique user id of the local user",
              "type": "string"
            },
            "password": {
              "description": "Password of the local user",
              "type": "string"
            },
            "username": {
              "description": "User name of the local user",
              "type": "string"
            },
            "role_name": {
              "description": "Role name of the local user",
              "type": "string"
            },
            "enabled": {
              "description": "Flag indicating if the account is enabled",
              "type": "boolean"
            },
            "change_pwd_next_login": {
              "description": "Flag indicating if the password change is required in next login",
              "type": "boolean"
            },
            "attributes": {
              "description": "Additional attributes(key/value pairs) may be stored with the local user account",
              "type": "object"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getForLocalUserByUserId"
      },
      "task": true
    },
    {
      "name": "patchForLocalUserByUserId",
      "summary": "PATCH_for_LocalUser_by_user_id",
      "description": "Update some fields of a local user by user_id",
      "input": [
        {
          "name": "userId",
          "type": "string",
          "info": "Unique user_id of the local user: string",
          "required": true,
          "schema": {
            "title": "userId",
            "type": "string"
          }
        },
        {
          "name": "body",
          "type": "object",
          "info": ": {\"id\": 123, \"user_id\": \"string\", \"password\": \"string\", \"username\": \"string\", \"role_name\": \"string\", \"enabled\": \"boolean\", \"change_pwd_next_login\": \"boolean\", \"attributes\": \"object\"}",
          "required": true,
          "schema": {
            "title": "LocalUser",
            "type": "object",
            "properties": {
              "id": {
                "description": "Numeric ID of the local user",
                "type": "integer",
                "format": "int64"
              },
              "user_id": {
                "description": "Unique user id of the local user",
                "type": "string"
              },
              "password": {
                "description": "Password of the local user",
                "type": "string"
              },
              "username": {
                "description": "User name of the local user",
                "type": "string"
              },
              "role_name": {
                "description": "Role name of the local user",
                "type": "string"
              },
              "enabled": {
                "description": "Flag indicating if the account is enabled",
                "type": "boolean"
              },
              "change_pwd_next_login": {
                "description": "Flag indicating if the password change is required in next login",
                "type": "boolean"
              },
              "attributes": {
                "description": "Additional attributes(key/value pairs) may be stored with the local user account",
                "type": "object"
              }
            }
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "LocalUser",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the local user",
              "type": "integer",
              "format": "int64"
            },
            "user_id": {
              "description": "Unique user id of the local user",
              "type": "string"
            },
            "password": {
              "description": "Password of the local user",
              "type": "string"
            },
            "username": {
              "description": "User name of the local user",
              "type": "string"
            },
            "role_name": {
              "description": "Role name of the local user",
              "type": "string"
            },
            "enabled": {
              "description": "Flag indicating if the account is enabled",
              "type": "boolean"
            },
            "change_pwd_next_login": {
              "description": "Flag indicating if the password change is required in next login",
              "type": "boolean"
            },
            "attributes": {
              "description": "Additional attributes(key/value pairs) may be stored with the local user account",
              "type": "object"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/patchForLocalUserByUserId"
      },
      "task": true
    },
    {
      "name": "putForLocalUserByUserId",
      "summary": "PUT_for_LocalUser_by_user_id",
      "description": "Replace a local user by user_id",
      "input": [
        {
          "name": "userId",
          "type": "string",
          "info": "Unique user_id of the local user: string",
          "required": true,
          "schema": {
            "title": "userId",
            "type": "string"
          }
        },
        {
          "name": "body",
          "type": "object",
          "info": ": {\"id\": 123, \"user_id\": \"string\", \"password\": \"string\", \"username\": \"string\", \"role_name\": \"string\", \"enabled\": \"boolean\", \"change_pwd_next_login\": \"boolean\", \"attributes\": \"object\"}",
          "required": true,
          "schema": {
            "title": "LocalUser",
            "type": "object",
            "properties": {
              "id": {
                "description": "Numeric ID of the local user",
                "type": "integer",
                "format": "int64"
              },
              "user_id": {
                "description": "Unique user id of the local user",
                "type": "string"
              },
              "password": {
                "description": "Password of the local user",
                "type": "string"
              },
              "username": {
                "description": "User name of the local user",
                "type": "string"
              },
              "role_name": {
                "description": "Role name of the local user",
                "type": "string"
              },
              "enabled": {
                "description": "Flag indicating if the account is enabled",
                "type": "boolean"
              },
              "change_pwd_next_login": {
                "description": "Flag indicating if the password change is required in next login",
                "type": "boolean"
              },
              "attributes": {
                "description": "Additional attributes(key/value pairs) may be stored with the local user account",
                "type": "object"
              }
            }
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "LocalUser",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the local user",
              "type": "integer",
              "format": "int64"
            },
            "user_id": {
              "description": "Unique user id of the local user",
              "type": "string"
            },
            "password": {
              "description": "Password of the local user",
              "type": "string"
            },
            "username": {
              "description": "User name of the local user",
              "type": "string"
            },
            "role_name": {
              "description": "Role name of the local user",
              "type": "string"
            },
            "enabled": {
              "description": "Flag indicating if the account is enabled",
              "type": "boolean"
            },
            "change_pwd_next_login": {
              "description": "Flag indicating if the password change is required in next login",
              "type": "boolean"
            },
            "attributes": {
              "description": "Additional attributes(key/value pairs) may be stored with the local user account",
              "type": "object"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/putForLocalUserByUserId"
      },
      "task": true
    },
    {
      "name": "deleteForLocalUserByUserId",
      "summary": "DELETE_for_LocalUser_by_user_id",
      "description": "Delete a local user by user_id",
      "input": [
        {
          "name": "userId",
          "type": "string",
          "info": "Unique user_id of the local user: string",
          "required": true,
          "schema": {
            "title": "userId",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/deleteForLocalUserByUserId"
      },
      "task": true
    },
    {
      "name": "getForEndpoint",
      "summary": "GET_for_Endpoint",
      "description": "Get a list of endpoints",
      "input": [
        {
          "name": "filter",
          "type": "string",
          "info": "JSON filter expression specifying the items to return: string",
          "required": false,
          "schema": {
            "title": "filter",
            "type": "string"
          }
        },
        {
          "name": "sort",
          "type": "string",
          "info": "Sort ordering for returned items: string",
          "required": false,
          "schema": {
            "title": "sort",
            "type": "string"
          }
        },
        {
          "name": "offset",
          "type": "number",
          "info": "Zero based offset to start from: 123",
          "required": false,
          "schema": {
            "title": "offset",
            "type": "number"
          }
        },
        {
          "name": "limit",
          "type": "number",
          "info": "Maximum number of items to return (1 – 1000): 123",
          "required": false,
          "schema": {
            "title": "limit",
            "type": "number"
          }
        },
        {
          "name": "calculateCount",
          "type": "boolean",
          "info": "Whether to calculate the total item count: boolean",
          "required": false,
          "schema": {
            "title": "calculateCount",
            "type": "boolean"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "EndpointList",
          "type": "object",
          "properties": {
            "_embedded": {
              "title": "EndpointItems",
              "type": "object",
              "properties": {
                "items": {
                  "description": "List of items matching the filter",
                  "type": "array",
                  "items": {
                    "title": "Endpoint",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Numeric ID of the endpoint",
                        "type": "integer",
                        "format": "int64"
                      },
                      "mac_address": {
                        "description": "MAC Address of the endpoint",
                        "type": "string"
                      },
                      "description": {
                        "description": "Description of the endpoint",
                        "type": "string"
                      },
                      "status": {
                        "title": "Status",
                        "description": "Status of the endpoint",
                        "type": "string",
                        "enum": [
                          "Known",
                          "Unknown",
                          "Disabled"
                        ]
                      },
                      "attributes": {
                        "description": "Additional attributes(key/value pairs) may be stored with the endpoint",
                        "type": "object"
                      }
                    }
                  }
                }
              },
              "required": [
                "items"
              ]
            },
            "_links": {
              "title": "HalLinks",
              "type": "object",
              "properties": {
                "self": {
                  "description": "URL of result",
                  "type": "string"
                },
                "first": {
                  "description": "URL of first page of results",
                  "type": "string"
                },
                "last": {
                  "description": "URL of last page of results",
                  "type": "string"
                },
                "prev": {
                  "description": "URL of previous page of results",
                  "type": "string"
                },
                "next": {
                  "description": "URL of next page of results",
                  "type": "string"
                }
              },
              "required": [
                "self",
                "first"
              ]
            },
            "count": {
              "description": "Total number of items matching the filter; returned if calculate_count is true",
              "type": "integer",
              "format": "int64"
            }
          },
          "required": [
            "_embedded",
            "_links"
          ]
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getForEndpoint"
      },
      "task": true
    },
    {
      "name": "postForEndpoint",
      "summary": "POST_for_Endpoint",
      "description": "Create a new endpoint",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": ": {\"id\": 123, \"mac_address\": \"string\", \"description\": \"string\", \"status\": \"Must be one of [Known, Unknown, Disabled]\", \"attributes\": \"object\"}",
          "required": true,
          "schema": {
            "title": "Endpoint",
            "type": "object",
            "properties": {
              "id": {
                "description": "Numeric ID of the endpoint",
                "type": "integer",
                "format": "int64"
              },
              "mac_address": {
                "description": "MAC Address of the endpoint",
                "type": "string"
              },
              "description": {
                "description": "Description of the endpoint",
                "type": "string"
              },
              "status": {
                "title": "Status",
                "description": "Status of the endpoint",
                "type": "string",
                "enum": [
                  "Known",
                  "Unknown",
                  "Disabled"
                ]
              },
              "attributes": {
                "description": "Additional attributes(key/value pairs) may be stored with the endpoint",
                "type": "object"
              }
            }
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "Endpoint",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the endpoint",
              "type": "integer",
              "format": "int64"
            },
            "mac_address": {
              "description": "MAC Address of the endpoint",
              "type": "string"
            },
            "description": {
              "description": "Description of the endpoint",
              "type": "string"
            },
            "status": {
              "title": "Status",
              "description": "Status of the endpoint",
              "type": "string",
              "enum": [
                "Known",
                "Unknown",
                "Disabled"
              ]
            },
            "attributes": {
              "description": "Additional attributes(key/value pairs) may be stored with the endpoint",
              "type": "object"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/postForEndpoint"
      },
      "task": true
    },
    {
      "name": "getGETForEndpoint",
      "summary": "GET_for_Endpoint",
      "description": "Get an endpoint",
      "input": [
        {
          "name": "endpointId",
          "type": "number",
          "info": "Numeric ID of the endpoint: 123",
          "required": true,
          "schema": {
            "title": "endpointId",
            "type": "number"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "Endpoint",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the endpoint",
              "type": "integer",
              "format": "int64"
            },
            "mac_address": {
              "description": "MAC Address of the endpoint",
              "type": "string"
            },
            "description": {
              "description": "Description of the endpoint",
              "type": "string"
            },
            "status": {
              "title": "Status",
              "description": "Status of the endpoint",
              "type": "string",
              "enum": [
                "Known",
                "Unknown",
                "Disabled"
              ]
            },
            "attributes": {
              "description": "Additional attributes(key/value pairs) may be stored with the endpoint",
              "type": "object"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getGETForEndpoint"
      },
      "task": true
    },
    {
      "name": "patchForEndpoint",
      "summary": "PATCH_for_Endpoint",
      "description": "Update some fields of an endpoint",
      "input": [
        {
          "name": "endpointId",
          "type": "number",
          "info": "Numeric ID of the endpoint: 123",
          "required": true,
          "schema": {
            "title": "endpointId",
            "type": "number"
          }
        },
        {
          "name": "body",
          "type": "object",
          "info": ": {\"id\": 123, \"mac_address\": \"string\", \"description\": \"string\", \"status\": \"Must be one of [Known, Unknown, Disabled]\", \"attributes\": \"object\"}",
          "required": true,
          "schema": {
            "title": "Endpoint",
            "type": "object",
            "properties": {
              "id": {
                "description": "Numeric ID of the endpoint",
                "type": "integer",
                "format": "int64"
              },
              "mac_address": {
                "description": "MAC Address of the endpoint",
                "type": "string"
              },
              "description": {
                "description": "Description of the endpoint",
                "type": "string"
              },
              "status": {
                "title": "Status",
                "description": "Status of the endpoint",
                "type": "string",
                "enum": [
                  "Known",
                  "Unknown",
                  "Disabled"
                ]
              },
              "attributes": {
                "description": "Additional attributes(key/value pairs) may be stored with the endpoint",
                "type": "object"
              }
            }
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "Endpoint",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the endpoint",
              "type": "integer",
              "format": "int64"
            },
            "mac_address": {
              "description": "MAC Address of the endpoint",
              "type": "string"
            },
            "description": {
              "description": "Description of the endpoint",
              "type": "string"
            },
            "status": {
              "title": "Status",
              "description": "Status of the endpoint",
              "type": "string",
              "enum": [
                "Known",
                "Unknown",
                "Disabled"
              ]
            },
            "attributes": {
              "description": "Additional attributes(key/value pairs) may be stored with the endpoint",
              "type": "object"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/patchForEndpoint"
      },
      "task": true
    },
    {
      "name": "putForEndpoint",
      "summary": "PUT_for_Endpoint",
      "description": "Replace an endpoint",
      "input": [
        {
          "name": "endpointId",
          "type": "number",
          "info": "Numeric ID of the endpoint: 123",
          "required": true,
          "schema": {
            "title": "endpointId",
            "type": "number"
          }
        },
        {
          "name": "body",
          "type": "object",
          "info": ": {\"id\": 123, \"mac_address\": \"string\", \"description\": \"string\", \"status\": \"Must be one of [Known, Unknown, Disabled]\", \"attributes\": \"object\"}",
          "required": true,
          "schema": {
            "title": "Endpoint",
            "type": "object",
            "properties": {
              "id": {
                "description": "Numeric ID of the endpoint",
                "type": "integer",
                "format": "int64"
              },
              "mac_address": {
                "description": "MAC Address of the endpoint",
                "type": "string"
              },
              "description": {
                "description": "Description of the endpoint",
                "type": "string"
              },
              "status": {
                "title": "Status",
                "description": "Status of the endpoint",
                "type": "string",
                "enum": [
                  "Known",
                  "Unknown",
                  "Disabled"
                ]
              },
              "attributes": {
                "description": "Additional attributes(key/value pairs) may be stored with the endpoint",
                "type": "object"
              }
            }
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "Endpoint",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the endpoint",
              "type": "integer",
              "format": "int64"
            },
            "mac_address": {
              "description": "MAC Address of the endpoint",
              "type": "string"
            },
            "description": {
              "description": "Description of the endpoint",
              "type": "string"
            },
            "status": {
              "title": "Status",
              "description": "Status of the endpoint",
              "type": "string",
              "enum": [
                "Known",
                "Unknown",
                "Disabled"
              ]
            },
            "attributes": {
              "description": "Additional attributes(key/value pairs) may be stored with the endpoint",
              "type": "object"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/putForEndpoint"
      },
      "task": true
    },
    {
      "name": "deleteForEndpoint",
      "summary": "DELETE_for_Endpoint",
      "description": "Delete an endpoint",
      "input": [
        {
          "name": "endpointId",
          "type": "number",
          "info": "Numeric ID of the endpoint: 123",
          "required": true,
          "schema": {
            "title": "endpointId",
            "type": "number"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/deleteForEndpoint"
      },
      "task": true
    },
    {
      "name": "getForEndpointByMacAddress",
      "summary": "GET_for_Endpoint_by_mac_address",
      "description": "Get an endpoint by mac_address",
      "input": [
        {
          "name": "macAddress",
          "type": "string",
          "info": "Unique mac_address of the endpoint: string",
          "required": true,
          "schema": {
            "title": "macAddress",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "Endpoint",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the endpoint",
              "type": "integer",
              "format": "int64"
            },
            "mac_address": {
              "description": "MAC Address of the endpoint",
              "type": "string"
            },
            "description": {
              "description": "Description of the endpoint",
              "type": "string"
            },
            "status": {
              "title": "Status",
              "description": "Status of the endpoint",
              "type": "string",
              "enum": [
                "Known",
                "Unknown",
                "Disabled"
              ]
            },
            "attributes": {
              "description": "Additional attributes(key/value pairs) may be stored with the endpoint",
              "type": "object"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getForEndpointByMacAddress"
      },
      "task": true
    },
    {
      "name": "patchForEndpointByMacAddress",
      "summary": "PATCH_for_Endpoint_by_mac_address",
      "description": "Update some fields of an endpoint by mac_address",
      "input": [
        {
          "name": "macAddress",
          "type": "string",
          "info": "Unique mac_address of the endpoint: string",
          "required": true,
          "schema": {
            "title": "macAddress",
            "type": "string"
          }
        },
        {
          "name": "body",
          "type": "object",
          "info": ": {\"id\": 123, \"mac_address\": \"string\", \"description\": \"string\", \"status\": \"Must be one of [Known, Unknown, Disabled]\", \"attributes\": \"object\"}",
          "required": true,
          "schema": {
            "title": "Endpoint",
            "type": "object",
            "properties": {
              "id": {
                "description": "Numeric ID of the endpoint",
                "type": "integer",
                "format": "int64"
              },
              "mac_address": {
                "description": "MAC Address of the endpoint",
                "type": "string"
              },
              "description": {
                "description": "Description of the endpoint",
                "type": "string"
              },
              "status": {
                "title": "Status",
                "description": "Status of the endpoint",
                "type": "string",
                "enum": [
                  "Known",
                  "Unknown",
                  "Disabled"
                ]
              },
              "attributes": {
                "description": "Additional attributes(key/value pairs) may be stored with the endpoint",
                "type": "object"
              }
            }
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "Endpoint",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the endpoint",
              "type": "integer",
              "format": "int64"
            },
            "mac_address": {
              "description": "MAC Address of the endpoint",
              "type": "string"
            },
            "description": {
              "description": "Description of the endpoint",
              "type": "string"
            },
            "status": {
              "title": "Status",
              "description": "Status of the endpoint",
              "type": "string",
              "enum": [
                "Known",
                "Unknown",
                "Disabled"
              ]
            },
            "attributes": {
              "description": "Additional attributes(key/value pairs) may be stored with the endpoint",
              "type": "object"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/patchForEndpointByMacAddress"
      },
      "task": true
    },
    {
      "name": "putForEndpointByMacAddress",
      "summary": "PUT_for_Endpoint_by_mac_address",
      "description": "Replace an endpoint by mac_address",
      "input": [
        {
          "name": "macAddress",
          "type": "string",
          "info": "Unique mac_address of the endpoint: string",
          "required": true,
          "schema": {
            "title": "macAddress",
            "type": "string"
          }
        },
        {
          "name": "body",
          "type": "object",
          "info": ": {\"id\": 123, \"mac_address\": \"string\", \"description\": \"string\", \"status\": \"Must be one of [Known, Unknown, Disabled]\", \"attributes\": \"object\"}",
          "required": true,
          "schema": {
            "title": "Endpoint",
            "type": "object",
            "properties": {
              "id": {
                "description": "Numeric ID of the endpoint",
                "type": "integer",
                "format": "int64"
              },
              "mac_address": {
                "description": "MAC Address of the endpoint",
                "type": "string"
              },
              "description": {
                "description": "Description of the endpoint",
                "type": "string"
              },
              "status": {
                "title": "Status",
                "description": "Status of the endpoint",
                "type": "string",
                "enum": [
                  "Known",
                  "Unknown",
                  "Disabled"
                ]
              },
              "attributes": {
                "description": "Additional attributes(key/value pairs) may be stored with the endpoint",
                "type": "object"
              }
            }
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "Endpoint",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the endpoint",
              "type": "integer",
              "format": "int64"
            },
            "mac_address": {
              "description": "MAC Address of the endpoint",
              "type": "string"
            },
            "description": {
              "description": "Description of the endpoint",
              "type": "string"
            },
            "status": {
              "title": "Status",
              "description": "Status of the endpoint",
              "type": "string",
              "enum": [
                "Known",
                "Unknown",
                "Disabled"
              ]
            },
            "attributes": {
              "description": "Additional attributes(key/value pairs) may be stored with the endpoint",
              "type": "object"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/putForEndpointByMacAddress"
      },
      "task": true
    },
    {
      "name": "deleteForEndpointByMacAddress",
      "summary": "DELETE_for_Endpoint_by_mac_address",
      "description": "Delete an endpoint by mac_address",
      "input": [
        {
          "name": "macAddress",
          "type": "string",
          "info": "Unique mac_address of the endpoint: string",
          "required": true,
          "schema": {
            "title": "macAddress",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/deleteForEndpointByMacAddress"
      },
      "task": true
    },
    {
      "name": "getForProxyTarget",
      "summary": "GET_for_ProxyTarget",
      "description": "Get a list of proxy targets",
      "input": [
        {
          "name": "filter",
          "type": "string",
          "info": "JSON filter expression specifying the items to return: string",
          "required": false,
          "schema": {
            "title": "filter",
            "type": "string"
          }
        },
        {
          "name": "sort",
          "type": "string",
          "info": "Sort ordering for returned items: string",
          "required": false,
          "schema": {
            "title": "sort",
            "type": "string"
          }
        },
        {
          "name": "offset",
          "type": "number",
          "info": "Zero based offset to start from: 123",
          "required": false,
          "schema": {
            "title": "offset",
            "type": "number"
          }
        },
        {
          "name": "limit",
          "type": "number",
          "info": "Maximum number of items to return (1 – 1000): 123",
          "required": false,
          "schema": {
            "title": "limit",
            "type": "number"
          }
        },
        {
          "name": "calculateCount",
          "type": "boolean",
          "info": "Whether to calculate the total item count: boolean",
          "required": false,
          "schema": {
            "title": "calculateCount",
            "type": "boolean"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "ProxyTargetList",
          "type": "object",
          "properties": {
            "_embedded": {
              "title": "ProxyTargetItems",
              "type": "object",
              "properties": {
                "items": {
                  "description": "List of items matching the filter",
                  "type": "array",
                  "items": {
                    "title": "ProxyTarget",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Numeric ID of the proxy target",
                        "type": "integer",
                        "format": "int64"
                      },
                      "name": {
                        "description": "Name of the proxy target",
                        "type": "string"
                      },
                      "host_name": {
                        "description": "Host name of the proxy target",
                        "type": "string"
                      },
                      "description": {
                        "description": "Description of the proxy target",
                        "type": "string"
                      },
                      "authentication_port": {
                        "description": "Authentication port of the proxy target",
                        "type": "integer",
                        "format": "int64"
                      },
                      "accounting_port": {
                        "description": "Accounting port of the proxy target",
                        "type": "integer",
                        "format": "int64"
                      },
                      "secret": {
                        "description": "Shared Secret of the proxy target",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": [
                "items"
              ]
            },
            "_links": {
              "title": "HalLinks",
              "type": "object",
              "properties": {
                "self": {
                  "description": "URL of result",
                  "type": "string"
                },
                "first": {
                  "description": "URL of first page of results",
                  "type": "string"
                },
                "last": {
                  "description": "URL of last page of results",
                  "type": "string"
                },
                "prev": {
                  "description": "URL of previous page of results",
                  "type": "string"
                },
                "next": {
                  "description": "URL of next page of results",
                  "type": "string"
                }
              },
              "required": [
                "self",
                "first"
              ]
            },
            "count": {
              "description": "Total number of items matching the filter; returned if calculate_count is true",
              "type": "integer",
              "format": "int64"
            }
          },
          "required": [
            "_embedded",
            "_links"
          ]
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getForProxyTarget"
      },
      "task": true
    },
    {
      "name": "postForProxyTarget",
      "summary": "POST_for_ProxyTarget",
      "description": "Create a new proxy target",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": ": {\"id\": 123, \"name\": \"string\", \"host_name\": \"string\", \"description\": \"string\", \"authentication_port\": 123, \"accounting_port\": 123, \"secret\": \"string\"}",
          "required": true,
          "schema": {
            "title": "ProxyTarget",
            "type": "object",
            "properties": {
              "id": {
                "description": "Numeric ID of the proxy target",
                "type": "integer",
                "format": "int64"
              },
              "name": {
                "description": "Name of the proxy target",
                "type": "string"
              },
              "host_name": {
                "description": "Host name of the proxy target",
                "type": "string"
              },
              "description": {
                "description": "Description of the proxy target",
                "type": "string"
              },
              "authentication_port": {
                "description": "Authentication port of the proxy target",
                "type": "integer",
                "format": "int64"
              },
              "accounting_port": {
                "description": "Accounting port of the proxy target",
                "type": "integer",
                "format": "int64"
              },
              "secret": {
                "description": "Shared Secret of the proxy target",
                "type": "string"
              }
            }
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "ProxyTarget",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the proxy target",
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "description": "Name of the proxy target",
              "type": "string"
            },
            "host_name": {
              "description": "Host name of the proxy target",
              "type": "string"
            },
            "description": {
              "description": "Description of the proxy target",
              "type": "string"
            },
            "authentication_port": {
              "description": "Authentication port of the proxy target",
              "type": "integer",
              "format": "int64"
            },
            "accounting_port": {
              "description": "Accounting port of the proxy target",
              "type": "integer",
              "format": "int64"
            },
            "secret": {
              "description": "Shared Secret of the proxy target",
              "type": "string"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/postForProxyTarget"
      },
      "task": true
    },
    {
      "name": "getGETForProxyTarget",
      "summary": "GET_for_ProxyTarget",
      "description": "Get a proxy target",
      "input": [
        {
          "name": "proxyTargetId",
          "type": "number",
          "info": "Numeric ID of the proxy target: 123",
          "required": true,
          "schema": {
            "title": "proxyTargetId",
            "type": "number"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "ProxyTarget",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the proxy target",
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "description": "Name of the proxy target",
              "type": "string"
            },
            "host_name": {
              "description": "Host name of the proxy target",
              "type": "string"
            },
            "description": {
              "description": "Description of the proxy target",
              "type": "string"
            },
            "authentication_port": {
              "description": "Authentication port of the proxy target",
              "type": "integer",
              "format": "int64"
            },
            "accounting_port": {
              "description": "Accounting port of the proxy target",
              "type": "integer",
              "format": "int64"
            },
            "secret": {
              "description": "Shared Secret of the proxy target",
              "type": "string"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getGETForProxyTarget"
      },
      "task": true
    },
    {
      "name": "patchForProxyTarget",
      "summary": "PATCH_for_ProxyTarget",
      "description": "Update some fields of a proxy target",
      "input": [
        {
          "name": "proxyTargetId",
          "type": "number",
          "info": "Numeric ID of the proxy target: 123",
          "required": true,
          "schema": {
            "title": "proxyTargetId",
            "type": "number"
          }
        },
        {
          "name": "body",
          "type": "object",
          "info": ": {\"id\": 123, \"name\": \"string\", \"host_name\": \"string\", \"description\": \"string\", \"authentication_port\": 123, \"accounting_port\": 123, \"secret\": \"string\"}",
          "required": true,
          "schema": {
            "title": "ProxyTarget",
            "type": "object",
            "properties": {
              "id": {
                "description": "Numeric ID of the proxy target",
                "type": "integer",
                "format": "int64"
              },
              "name": {
                "description": "Name of the proxy target",
                "type": "string"
              },
              "host_name": {
                "description": "Host name of the proxy target",
                "type": "string"
              },
              "description": {
                "description": "Description of the proxy target",
                "type": "string"
              },
              "authentication_port": {
                "description": "Authentication port of the proxy target",
                "type": "integer",
                "format": "int64"
              },
              "accounting_port": {
                "description": "Accounting port of the proxy target",
                "type": "integer",
                "format": "int64"
              },
              "secret": {
                "description": "Shared Secret of the proxy target",
                "type": "string"
              }
            }
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "ProxyTarget",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the proxy target",
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "description": "Name of the proxy target",
              "type": "string"
            },
            "host_name": {
              "description": "Host name of the proxy target",
              "type": "string"
            },
            "description": {
              "description": "Description of the proxy target",
              "type": "string"
            },
            "authentication_port": {
              "description": "Authentication port of the proxy target",
              "type": "integer",
              "format": "int64"
            },
            "accounting_port": {
              "description": "Accounting port of the proxy target",
              "type": "integer",
              "format": "int64"
            },
            "secret": {
              "description": "Shared Secret of the proxy target",
              "type": "string"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/patchForProxyTarget"
      },
      "task": true
    },
    {
      "name": "putForProxyTarget",
      "summary": "PUT_for_ProxyTarget",
      "description": "Replace a proxy target",
      "input": [
        {
          "name": "proxyTargetId",
          "type": "number",
          "info": "Numeric ID of the proxy target: 123",
          "required": true,
          "schema": {
            "title": "proxyTargetId",
            "type": "number"
          }
        },
        {
          "name": "body",
          "type": "object",
          "info": ": {\"id\": 123, \"name\": \"string\", \"host_name\": \"string\", \"description\": \"string\", \"authentication_port\": 123, \"accounting_port\": 123, \"secret\": \"string\"}",
          "required": true,
          "schema": {
            "title": "ProxyTarget",
            "type": "object",
            "properties": {
              "id": {
                "description": "Numeric ID of the proxy target",
                "type": "integer",
                "format": "int64"
              },
              "name": {
                "description": "Name of the proxy target",
                "type": "string"
              },
              "host_name": {
                "description": "Host name of the proxy target",
                "type": "string"
              },
              "description": {
                "description": "Description of the proxy target",
                "type": "string"
              },
              "authentication_port": {
                "description": "Authentication port of the proxy target",
                "type": "integer",
                "format": "int64"
              },
              "accounting_port": {
                "description": "Accounting port of the proxy target",
                "type": "integer",
                "format": "int64"
              },
              "secret": {
                "description": "Shared Secret of the proxy target",
                "type": "string"
              }
            }
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "ProxyTarget",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the proxy target",
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "description": "Name of the proxy target",
              "type": "string"
            },
            "host_name": {
              "description": "Host name of the proxy target",
              "type": "string"
            },
            "description": {
              "description": "Description of the proxy target",
              "type": "string"
            },
            "authentication_port": {
              "description": "Authentication port of the proxy target",
              "type": "integer",
              "format": "int64"
            },
            "accounting_port": {
              "description": "Accounting port of the proxy target",
              "type": "integer",
              "format": "int64"
            },
            "secret": {
              "description": "Shared Secret of the proxy target",
              "type": "string"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/putForProxyTarget"
      },
      "task": true
    },
    {
      "name": "deleteForProxyTarget",
      "summary": "DELETE_for_ProxyTarget",
      "description": "Delete a proxy target",
      "input": [
        {
          "name": "proxyTargetId",
          "type": "number",
          "info": "Numeric ID of the proxy target: 123",
          "required": true,
          "schema": {
            "title": "proxyTargetId",
            "type": "number"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/deleteForProxyTarget"
      },
      "task": true
    },
    {
      "name": "getForProxyTargetByName",
      "summary": "GET_for_ProxyTarget_by_name",
      "description": "Get a proxy target by name",
      "input": [
        {
          "name": "name",
          "type": "string",
          "info": "Unique name of the proxy target: string",
          "required": true,
          "schema": {
            "title": "name",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "ProxyTarget",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the proxy target",
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "description": "Name of the proxy target",
              "type": "string"
            },
            "host_name": {
              "description": "Host name of the proxy target",
              "type": "string"
            },
            "description": {
              "description": "Description of the proxy target",
              "type": "string"
            },
            "authentication_port": {
              "description": "Authentication port of the proxy target",
              "type": "integer",
              "format": "int64"
            },
            "accounting_port": {
              "description": "Accounting port of the proxy target",
              "type": "integer",
              "format": "int64"
            },
            "secret": {
              "description": "Shared Secret of the proxy target",
              "type": "string"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getForProxyTargetByName"
      },
      "task": true
    },
    {
      "name": "patchForProxyTargetByName",
      "summary": "PATCH_for_ProxyTarget_by_name",
      "description": "Update some fields of a proxy target by name",
      "input": [
        {
          "name": "name",
          "type": "string",
          "info": "Unique name of the proxy target: string",
          "required": true,
          "schema": {
            "title": "name",
            "type": "string"
          }
        },
        {
          "name": "body",
          "type": "object",
          "info": ": {\"id\": 123, \"name\": \"string\", \"host_name\": \"string\", \"description\": \"string\", \"authentication_port\": 123, \"accounting_port\": 123, \"secret\": \"string\"}",
          "required": true,
          "schema": {
            "title": "ProxyTarget",
            "type": "object",
            "properties": {
              "id": {
                "description": "Numeric ID of the proxy target",
                "type": "integer",
                "format": "int64"
              },
              "name": {
                "description": "Name of the proxy target",
                "type": "string"
              },
              "host_name": {
                "description": "Host name of the proxy target",
                "type": "string"
              },
              "description": {
                "description": "Description of the proxy target",
                "type": "string"
              },
              "authentication_port": {
                "description": "Authentication port of the proxy target",
                "type": "integer",
                "format": "int64"
              },
              "accounting_port": {
                "description": "Accounting port of the proxy target",
                "type": "integer",
                "format": "int64"
              },
              "secret": {
                "description": "Shared Secret of the proxy target",
                "type": "string"
              }
            }
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "ProxyTarget",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the proxy target",
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "description": "Name of the proxy target",
              "type": "string"
            },
            "host_name": {
              "description": "Host name of the proxy target",
              "type": "string"
            },
            "description": {
              "description": "Description of the proxy target",
              "type": "string"
            },
            "authentication_port": {
              "description": "Authentication port of the proxy target",
              "type": "integer",
              "format": "int64"
            },
            "accounting_port": {
              "description": "Accounting port of the proxy target",
              "type": "integer",
              "format": "int64"
            },
            "secret": {
              "description": "Shared Secret of the proxy target",
              "type": "string"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/patchForProxyTargetByName"
      },
      "task": true
    },
    {
      "name": "putForProxyTargetByName",
      "summary": "PUT_for_ProxyTarget_by_name",
      "description": "Replace a proxy target by name",
      "input": [
        {
          "name": "name",
          "type": "string",
          "info": "Unique name of the proxy target: string",
          "required": true,
          "schema": {
            "title": "name",
            "type": "string"
          }
        },
        {
          "name": "body",
          "type": "object",
          "info": ": {\"id\": 123, \"name\": \"string\", \"host_name\": \"string\", \"description\": \"string\", \"authentication_port\": 123, \"accounting_port\": 123, \"secret\": \"string\"}",
          "required": true,
          "schema": {
            "title": "ProxyTarget",
            "type": "object",
            "properties": {
              "id": {
                "description": "Numeric ID of the proxy target",
                "type": "integer",
                "format": "int64"
              },
              "name": {
                "description": "Name of the proxy target",
                "type": "string"
              },
              "host_name": {
                "description": "Host name of the proxy target",
                "type": "string"
              },
              "description": {
                "description": "Description of the proxy target",
                "type": "string"
              },
              "authentication_port": {
                "description": "Authentication port of the proxy target",
                "type": "integer",
                "format": "int64"
              },
              "accounting_port": {
                "description": "Accounting port of the proxy target",
                "type": "integer",
                "format": "int64"
              },
              "secret": {
                "description": "Shared Secret of the proxy target",
                "type": "string"
              }
            }
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "ProxyTarget",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the proxy target",
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "description": "Name of the proxy target",
              "type": "string"
            },
            "host_name": {
              "description": "Host name of the proxy target",
              "type": "string"
            },
            "description": {
              "description": "Description of the proxy target",
              "type": "string"
            },
            "authentication_port": {
              "description": "Authentication port of the proxy target",
              "type": "integer",
              "format": "int64"
            },
            "accounting_port": {
              "description": "Accounting port of the proxy target",
              "type": "integer",
              "format": "int64"
            },
            "secret": {
              "description": "Shared Secret of the proxy target",
              "type": "string"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/putForProxyTargetByName"
      },
      "task": true
    },
    {
      "name": "deleteForProxyTargetByName",
      "summary": "DELETE_for_ProxyTarget_by_name",
      "description": "Delete a proxy target by name",
      "input": [
        {
          "name": "name",
          "type": "string",
          "info": "Unique name of the proxy target: string",
          "required": true,
          "schema": {
            "title": "name",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/deleteForProxyTargetByName"
      },
      "task": true
    },
    {
      "name": "getForNetworkDevice",
      "summary": "GET_for_NetworkDevice",
      "description": "Get a list of network devices",
      "input": [
        {
          "name": "filter",
          "type": "string",
          "info": "JSON filter expression specifying the items to return: string",
          "required": false,
          "schema": {
            "title": "filter",
            "type": "string"
          }
        },
        {
          "name": "sort",
          "type": "string",
          "info": "Sort ordering for returned items: string",
          "required": false,
          "schema": {
            "title": "sort",
            "type": "string"
          }
        },
        {
          "name": "offset",
          "type": "number",
          "info": "Zero based offset to start from: 123",
          "required": false,
          "schema": {
            "title": "offset",
            "type": "number"
          }
        },
        {
          "name": "limit",
          "type": "number",
          "info": "Maximum number of items to return (1 – 1000): 123",
          "required": false,
          "schema": {
            "title": "limit",
            "type": "number"
          }
        },
        {
          "name": "calculateCount",
          "type": "boolean",
          "info": "Whether to calculate the total item count: boolean",
          "required": false,
          "schema": {
            "title": "calculateCount",
            "type": "boolean"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "NetworkDeviceList",
          "type": "object",
          "properties": {
            "_embedded": {
              "title": "NetworkDeviceItems",
              "type": "object",
              "properties": {
                "items": {
                  "description": "List of items matching the filter",
                  "type": "array",
                  "items": {
                    "title": "NetworkDevice",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Numeric ID of the network device",
                        "type": "integer",
                        "format": "int64"
                      },
                      "description": {
                        "description": "Description of the network device",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the network device",
                        "type": "string"
                      },
                      "ip_address": {
                        "description": "IP or Subnet Address of the network device",
                        "type": "string"
                      },
                      "radius_secret": {
                        "description": "RADIUS Shared Secret of the network device",
                        "type": "string"
                      },
                      "tacacs_secret": {
                        "description": "TACACS+ Shared Secret of the network device",
                        "type": "string"
                      },
                      "vendor_name": {
                        "description": "Vendor Name of the network device",
                        "type": "string"
                      },
                      "coa_capable": {
                        "description": "Flag indicating if the network device is capable of CoA",
                        "type": "boolean"
                      },
                      "coa_port": {
                        "description": "CoA port number of the network device",
                        "type": "integer",
                        "format": "int64"
                      },
                      "radsec_enabled": {
                        "description": "Flag indicating if the network device is radSec enabled",
                        "type": "boolean"
                      },
                      "snmp_read": {
                        "title": "SNMPReadSettings",
                        "type": "object",
                        "properties": {
                          "force_read": {
                            "description": "Enable to always read information from this device",
                            "type": "boolean"
                          },
                          "read_arp_info": {
                            "description": "Enable to read ARP table from this device",
                            "type": "boolean"
                          },
                          "zone_name": {
                            "description": "Policy Manager Zone name to be associated with the network device",
                            "type": "string"
                          },
                          "snmp_version": {
                            "title": "SnmpVersion",
                            "description": "SNMP version of the network device",
                            "type": "string",
                            "enum": [
                              "V1",
                              "V2C",
                              "V3"
                            ]
                          },
                          "community_string": {
                            "description": "Community string of the network device",
                            "type": "string"
                          },
                          "security_level": {
                            "title": "SecurityLevel",
                            "description": "Security level of the network device",
                            "type": "string",
                            "enum": [
                              "NOAUTH_NOPRIV",
                              "AUTH_NOPRIV",
                              "AUTH_PRIV"
                            ]
                          },
                          "user": {
                            "description": "Username of the network device",
                            "type": "string"
                          },
                          "auth_protocol": {
                            "title": "AuthProtocol",
                            "description": "Authentication protocol of the network device",
                            "type": "string",
                            "enum": [
                              "MD5",
                              "SHA"
                            ]
                          },
                          "auth_key": {
                            "description": "Authentication key of the network device",
                            "type": "string"
                          },
                          "privacy_protocol": {
                            "title": "PrivacyProtocol",
                            "description": "Privacy protocol of the network device",
                            "type": "string",
                            "enum": [
                              "DES_CBC",
                              "AES_128"
                            ]
                          },
                          "privacy_key": {
                            "description": "Privacy key of the network device",
                            "type": "string"
                          }
                        }
                      },
                      "snmp_write": {
                        "title": "SNMPWriteSettings",
                        "type": "object",
                        "properties": {
                          "default_vlan": {
                            "description": "Default VLAN for port when SNMP-enforced session expires",
                            "type": "integer",
                            "format": "int64"
                          },
                          "snmp_version": {
                            "title": "SnmpVersion",
                            "description": "SNMP version of the network device",
                            "type": "string",
                            "enum": [
                              "V1",
                              "V2C",
                              "V3"
                            ]
                          },
                          "community_string": {
                            "description": "Community string of the network device",
                            "type": "string"
                          },
                          "security_level": {
                            "title": "SecurityLevel",
                            "description": "Security level of the network device",
                            "type": "string",
                            "enum": [
                              "NOAUTH_NOPRIV",
                              "AUTH_NOPRIV",
                              "AUTH_PRIV"
                            ]
                          },
                          "user": {
                            "description": "Username of the network device",
                            "type": "string"
                          },
                          "auth_protocol": {
                            "title": "AuthProtocol",
                            "description": "Authentication protocol of the network device",
                            "type": "string",
                            "enum": [
                              "MD5",
                              "SHA"
                            ]
                          },
                          "auth_key": {
                            "description": "Authentication key of the network device",
                            "type": "string"
                          },
                          "privacy_protocol": {
                            "title": "PrivacyProtocol",
                            "description": "Privacy protocol of the network device",
                            "type": "string",
                            "enum": [
                              "DES_CBC",
                              "AES_128"
                            ]
                          },
                          "privacy_key": {
                            "description": "Privacy key of the network device",
                            "type": "string"
                          }
                        }
                      },
                      "cli_config": {
                        "title": "CLISettings",
                        "type": "object",
                        "properties": {
                          "type": {
                            "title": "Type",
                            "description": "Access type of the network device",
                            "type": "string",
                            "enum": [
                              "SSH",
                              "Telnet"
                            ]
                          },
                          "port": {
                            "description": "SSH/Telnet port number of the network device",
                            "type": "integer",
                            "format": "int64"
                          },
                          "username": {
                            "description": "Username of the network device",
                            "type": "string"
                          },
                          "password": {
                            "description": "Password of the network device",
                            "type": "string"
                          },
                          "username_prompt_regex": {
                            "description": "Username prompt regex of the network device",
                            "type": "string"
                          },
                          "password_prompt_regex": {
                            "description": "Password prompt regex of the network device",
                            "type": "string"
                          },
                          "command_prompt_regex": {
                            "description": "Command prompt regex of the network device",
                            "type": "string"
                          },
                          "enable_prompt_regex": {
                            "description": "Enable prompt regex of the network device",
                            "type": "string"
                          },
                          "enable_password": {
                            "description": "Enable password of the network device",
                            "type": "string"
                          }
                        }
                      },
                      "onConnect_enforcement": {
                        "title": "OnConnectEnforcementSettings",
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "description": "Flag indicating if the network device is enabled with OnConnect Enforcement. SNMP read configuration and Policy Manager Zone is a must for this to work.",
                            "type": "boolean"
                          },
                          "ports": {
                            "description": "Port names used in OnConnect Enforcement in CSV format (e.g. FastEthernet 1/0/10). Use empty string to enable for all ports. Ports determined to be uplink or trunk ports will be ignored.",
                            "type": "string"
                          }
                        }
                      },
                      "attributes": {
                        "description": "Additional attributes(key/value pairs) may be stored with the network device",
                        "type": "object"
                      }
                    }
                  }
                }
              },
              "required": [
                "items"
              ]
            },
            "_links": {
              "title": "HalLinks",
              "type": "object",
              "properties": {
                "self": {
                  "description": "URL of result",
                  "type": "string"
                },
                "first": {
                  "description": "URL of first page of results",
                  "type": "string"
                },
                "last": {
                  "description": "URL of last page of results",
                  "type": "string"
                },
                "prev": {
                  "description": "URL of previous page of results",
                  "type": "string"
                },
                "next": {
                  "description": "URL of next page of results",
                  "type": "string"
                }
              },
              "required": [
                "self",
                "first"
              ]
            },
            "count": {
              "description": "Total number of items matching the filter; returned if calculate_count is true",
              "type": "integer",
              "format": "int64"
            }
          },
          "required": [
            "_embedded",
            "_links"
          ]
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getForNetworkDevice"
      },
      "task": true
    },
    {
      "name": "postForNetworkDevice",
      "summary": "POST_for_NetworkDevice",
      "description": "Create a new network device",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": ": {\"id\": 123, \"description\": \"string\", \"name\": \"string\", \"ip_address\": \"string\", \"radius_secret\": \"string\", \"tacacs_secret\": \"string\", \"vendor_name\": \"string\", \"coa_capable\": \"boolean\", \"coa_port\": 123, \"radsec_enabled\": \"boolean\", \"snmp_read\": {\"force_read\": \"boolean\", \"read_arp_info\": \"boolean\", \"zone_name\": \"string\", \"snmp_version\": \"Must be one of [V1, V2C, V3]\", \"community_string\": \"string\", \"security_level\": \"Must be one of [NOAUTH_NOPRIV, AUTH_NOPRIV, AUTH_PRIV]\", \"user\": \"string\", \"auth_protocol\": \"Must be one of [MD5, SHA]\", \"auth_key\": \"string\", \"privacy_protocol\": \"Must be one of [DES_CBC, AES_128]\", \"privacy_key\": \"string\"}, \"snmp_write\": {\"default_vlan\": 123, \"snmp_version\": \"Must be one of [V1, V2C, V3]\", \"community_string\": \"string\", \"security_level\": \"Must be one of [NOAUTH_NOPRIV, AUTH_NOPRIV, AUTH_PRIV]\", \"user\": \"string\", \"auth_protocol\": \"Must be one of [MD5, SHA]\", \"auth_key\": \"string\", \"privacy_protocol\": \"Must be one of [DES_CBC, AES_128]\", \"privacy_key\": \"string\"}, \"cli_config\": {\"type\": \"Must be one of [SSH, Telnet]\", \"port\": 123, \"username\": \"string\", \"password\": \"string\", \"username_prompt_regex\": \"string\", \"password_prompt_regex\": \"string\", \"command_prompt_regex\": \"string\", \"enable_prompt_regex\": \"string\", \"enable_password\": \"string\"}, \"onConnect_enforcement\": {\"enabled\": \"boolean\", \"ports\": \"string\"}, \"attributes\": \"object\"}",
          "required": true,
          "schema": {
            "title": "NetworkDevice",
            "type": "object",
            "properties": {
              "id": {
                "description": "Numeric ID of the network device",
                "type": "integer",
                "format": "int64"
              },
              "description": {
                "description": "Description of the network device",
                "type": "string"
              },
              "name": {
                "description": "Name of the network device",
                "type": "string"
              },
              "ip_address": {
                "description": "IP or Subnet Address of the network device",
                "type": "string"
              },
              "radius_secret": {
                "description": "RADIUS Shared Secret of the network device",
                "type": "string"
              },
              "tacacs_secret": {
                "description": "TACACS+ Shared Secret of the network device",
                "type": "string"
              },
              "vendor_name": {
                "description": "Vendor Name of the network device",
                "type": "string"
              },
              "coa_capable": {
                "description": "Flag indicating if the network device is capable of CoA",
                "type": "boolean"
              },
              "coa_port": {
                "description": "CoA port number of the network device",
                "type": "integer",
                "format": "int64"
              },
              "radsec_enabled": {
                "description": "Flag indicating if the network device is radSec enabled",
                "type": "boolean"
              },
              "snmp_read": {
                "title": "SNMPReadSettings",
                "type": "object",
                "properties": {
                  "force_read": {
                    "description": "Enable to always read information from this device",
                    "type": "boolean"
                  },
                  "read_arp_info": {
                    "description": "Enable to read ARP table from this device",
                    "type": "boolean"
                  },
                  "zone_name": {
                    "description": "Policy Manager Zone name to be associated with the network device",
                    "type": "string"
                  },
                  "snmp_version": {
                    "title": "SnmpVersion",
                    "description": "SNMP version of the network device",
                    "type": "string",
                    "enum": [
                      "V1",
                      "V2C",
                      "V3"
                    ]
                  },
                  "community_string": {
                    "description": "Community string of the network device",
                    "type": "string"
                  },
                  "security_level": {
                    "title": "SecurityLevel",
                    "description": "Security level of the network device",
                    "type": "string",
                    "enum": [
                      "NOAUTH_NOPRIV",
                      "AUTH_NOPRIV",
                      "AUTH_PRIV"
                    ]
                  },
                  "user": {
                    "description": "Username of the network device",
                    "type": "string"
                  },
                  "auth_protocol": {
                    "title": "AuthProtocol",
                    "description": "Authentication protocol of the network device",
                    "type": "string",
                    "enum": [
                      "MD5",
                      "SHA"
                    ]
                  },
                  "auth_key": {
                    "description": "Authentication key of the network device",
                    "type": "string"
                  },
                  "privacy_protocol": {
                    "title": "PrivacyProtocol",
                    "description": "Privacy protocol of the network device",
                    "type": "string",
                    "enum": [
                      "DES_CBC",
                      "AES_128"
                    ]
                  },
                  "privacy_key": {
                    "description": "Privacy key of the network device",
                    "type": "string"
                  }
                }
              },
              "snmp_write": {
                "title": "SNMPWriteSettings",
                "type": "object",
                "properties": {
                  "default_vlan": {
                    "description": "Default VLAN for port when SNMP-enforced session expires",
                    "type": "integer",
                    "format": "int64"
                  },
                  "snmp_version": {
                    "title": "SnmpVersion",
                    "description": "SNMP version of the network device",
                    "type": "string",
                    "enum": [
                      "V1",
                      "V2C",
                      "V3"
                    ]
                  },
                  "community_string": {
                    "description": "Community string of the network device",
                    "type": "string"
                  },
                  "security_level": {
                    "title": "SecurityLevel",
                    "description": "Security level of the network device",
                    "type": "string",
                    "enum": [
                      "NOAUTH_NOPRIV",
                      "AUTH_NOPRIV",
                      "AUTH_PRIV"
                    ]
                  },
                  "user": {
                    "description": "Username of the network device",
                    "type": "string"
                  },
                  "auth_protocol": {
                    "title": "AuthProtocol",
                    "description": "Authentication protocol of the network device",
                    "type": "string",
                    "enum": [
                      "MD5",
                      "SHA"
                    ]
                  },
                  "auth_key": {
                    "description": "Authentication key of the network device",
                    "type": "string"
                  },
                  "privacy_protocol": {
                    "title": "PrivacyProtocol",
                    "description": "Privacy protocol of the network device",
                    "type": "string",
                    "enum": [
                      "DES_CBC",
                      "AES_128"
                    ]
                  },
                  "privacy_key": {
                    "description": "Privacy key of the network device",
                    "type": "string"
                  }
                }
              },
              "cli_config": {
                "title": "CLISettings",
                "type": "object",
                "properties": {
                  "type": {
                    "title": "Type",
                    "description": "Access type of the network device",
                    "type": "string",
                    "enum": [
                      "SSH",
                      "Telnet"
                    ]
                  },
                  "port": {
                    "description": "SSH/Telnet port number of the network device",
                    "type": "integer",
                    "format": "int64"
                  },
                  "username": {
                    "description": "Username of the network device",
                    "type": "string"
                  },
                  "password": {
                    "description": "Password of the network device",
                    "type": "string"
                  },
                  "username_prompt_regex": {
                    "description": "Username prompt regex of the network device",
                    "type": "string"
                  },
                  "password_prompt_regex": {
                    "description": "Password prompt regex of the network device",
                    "type": "string"
                  },
                  "command_prompt_regex": {
                    "description": "Command prompt regex of the network device",
                    "type": "string"
                  },
                  "enable_prompt_regex": {
                    "description": "Enable prompt regex of the network device",
                    "type": "string"
                  },
                  "enable_password": {
                    "description": "Enable password of the network device",
                    "type": "string"
                  }
                }
              },
              "onConnect_enforcement": {
                "title": "OnConnectEnforcementSettings",
                "type": "object",
                "properties": {
                  "enabled": {
                    "description": "Flag indicating if the network device is enabled with OnConnect Enforcement. SNMP read configuration and Policy Manager Zone is a must for this to work.",
                    "type": "boolean"
                  },
                  "ports": {
                    "description": "Port names used in OnConnect Enforcement in CSV format (e.g. FastEthernet 1/0/10). Use empty string to enable for all ports. Ports determined to be uplink or trunk ports will be ignored.",
                    "type": "string"
                  }
                }
              },
              "attributes": {
                "description": "Additional attributes(key/value pairs) may be stored with the network device",
                "type": "object"
              }
            }
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "NetworkDevice",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the network device",
              "type": "integer",
              "format": "int64"
            },
            "description": {
              "description": "Description of the network device",
              "type": "string"
            },
            "name": {
              "description": "Name of the network device",
              "type": "string"
            },
            "ip_address": {
              "description": "IP or Subnet Address of the network device",
              "type": "string"
            },
            "radius_secret": {
              "description": "RADIUS Shared Secret of the network device",
              "type": "string"
            },
            "tacacs_secret": {
              "description": "TACACS+ Shared Secret of the network device",
              "type": "string"
            },
            "vendor_name": {
              "description": "Vendor Name of the network device",
              "type": "string"
            },
            "coa_capable": {
              "description": "Flag indicating if the network device is capable of CoA",
              "type": "boolean"
            },
            "coa_port": {
              "description": "CoA port number of the network device",
              "type": "integer",
              "format": "int64"
            },
            "radsec_enabled": {
              "description": "Flag indicating if the network device is radSec enabled",
              "type": "boolean"
            },
            "snmp_read": {
              "title": "SNMPReadSettings",
              "type": "object",
              "properties": {
                "force_read": {
                  "description": "Enable to always read information from this device",
                  "type": "boolean"
                },
                "read_arp_info": {
                  "description": "Enable to read ARP table from this device",
                  "type": "boolean"
                },
                "zone_name": {
                  "description": "Policy Manager Zone name to be associated with the network device",
                  "type": "string"
                },
                "snmp_version": {
                  "title": "SnmpVersion",
                  "description": "SNMP version of the network device",
                  "type": "string",
                  "enum": [
                    "V1",
                    "V2C",
                    "V3"
                  ]
                },
                "community_string": {
                  "description": "Community string of the network device",
                  "type": "string"
                },
                "security_level": {
                  "title": "SecurityLevel",
                  "description": "Security level of the network device",
                  "type": "string",
                  "enum": [
                    "NOAUTH_NOPRIV",
                    "AUTH_NOPRIV",
                    "AUTH_PRIV"
                  ]
                },
                "user": {
                  "description": "Username of the network device",
                  "type": "string"
                },
                "auth_protocol": {
                  "title": "AuthProtocol",
                  "description": "Authentication protocol of the network device",
                  "type": "string",
                  "enum": [
                    "MD5",
                    "SHA"
                  ]
                },
                "auth_key": {
                  "description": "Authentication key of the network device",
                  "type": "string"
                },
                "privacy_protocol": {
                  "title": "PrivacyProtocol",
                  "description": "Privacy protocol of the network device",
                  "type": "string",
                  "enum": [
                    "DES_CBC",
                    "AES_128"
                  ]
                },
                "privacy_key": {
                  "description": "Privacy key of the network device",
                  "type": "string"
                }
              }
            },
            "snmp_write": {
              "title": "SNMPWriteSettings",
              "type": "object",
              "properties": {
                "default_vlan": {
                  "description": "Default VLAN for port when SNMP-enforced session expires",
                  "type": "integer",
                  "format": "int64"
                },
                "snmp_version": {
                  "title": "SnmpVersion",
                  "description": "SNMP version of the network device",
                  "type": "string",
                  "enum": [
                    "V1",
                    "V2C",
                    "V3"
                  ]
                },
                "community_string": {
                  "description": "Community string of the network device",
                  "type": "string"
                },
                "security_level": {
                  "title": "SecurityLevel",
                  "description": "Security level of the network device",
                  "type": "string",
                  "enum": [
                    "NOAUTH_NOPRIV",
                    "AUTH_NOPRIV",
                    "AUTH_PRIV"
                  ]
                },
                "user": {
                  "description": "Username of the network device",
                  "type": "string"
                },
                "auth_protocol": {
                  "title": "AuthProtocol",
                  "description": "Authentication protocol of the network device",
                  "type": "string",
                  "enum": [
                    "MD5",
                    "SHA"
                  ]
                },
                "auth_key": {
                  "description": "Authentication key of the network device",
                  "type": "string"
                },
                "privacy_protocol": {
                  "title": "PrivacyProtocol",
                  "description": "Privacy protocol of the network device",
                  "type": "string",
                  "enum": [
                    "DES_CBC",
                    "AES_128"
                  ]
                },
                "privacy_key": {
                  "description": "Privacy key of the network device",
                  "type": "string"
                }
              }
            },
            "cli_config": {
              "title": "CLISettings",
              "type": "object",
              "properties": {
                "type": {
                  "title": "Type",
                  "description": "Access type of the network device",
                  "type": "string",
                  "enum": [
                    "SSH",
                    "Telnet"
                  ]
                },
                "port": {
                  "description": "SSH/Telnet port number of the network device",
                  "type": "integer",
                  "format": "int64"
                },
                "username": {
                  "description": "Username of the network device",
                  "type": "string"
                },
                "password": {
                  "description": "Password of the network device",
                  "type": "string"
                },
                "username_prompt_regex": {
                  "description": "Username prompt regex of the network device",
                  "type": "string"
                },
                "password_prompt_regex": {
                  "description": "Password prompt regex of the network device",
                  "type": "string"
                },
                "command_prompt_regex": {
                  "description": "Command prompt regex of the network device",
                  "type": "string"
                },
                "enable_prompt_regex": {
                  "description": "Enable prompt regex of the network device",
                  "type": "string"
                },
                "enable_password": {
                  "description": "Enable password of the network device",
                  "type": "string"
                }
              }
            },
            "onConnect_enforcement": {
              "title": "OnConnectEnforcementSettings",
              "type": "object",
              "properties": {
                "enabled": {
                  "description": "Flag indicating if the network device is enabled with OnConnect Enforcement. SNMP read configuration and Policy Manager Zone is a must for this to work.",
                  "type": "boolean"
                },
                "ports": {
                  "description": "Port names used in OnConnect Enforcement in CSV format (e.g. FastEthernet 1/0/10). Use empty string to enable for all ports. Ports determined to be uplink or trunk ports will be ignored.",
                  "type": "string"
                }
              }
            },
            "attributes": {
              "description": "Additional attributes(key/value pairs) may be stored with the network device",
              "type": "object"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/postForNetworkDevice"
      },
      "task": true
    },
    {
      "name": "getGETForNetworkDevice",
      "summary": "GET_for_NetworkDevice",
      "description": "Get a network device",
      "input": [
        {
          "name": "networkDeviceId",
          "type": "number",
          "info": "Numeric ID of the network device: 123",
          "required": true,
          "schema": {
            "title": "networkDeviceId",
            "type": "number"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "NetworkDevice",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the network device",
              "type": "integer",
              "format": "int64"
            },
            "description": {
              "description": "Description of the network device",
              "type": "string"
            },
            "name": {
              "description": "Name of the network device",
              "type": "string"
            },
            "ip_address": {
              "description": "IP or Subnet Address of the network device",
              "type": "string"
            },
            "radius_secret": {
              "description": "RADIUS Shared Secret of the network device",
              "type": "string"
            },
            "tacacs_secret": {
              "description": "TACACS+ Shared Secret of the network device",
              "type": "string"
            },
            "vendor_name": {
              "description": "Vendor Name of the network device",
              "type": "string"
            },
            "coa_capable": {
              "description": "Flag indicating if the network device is capable of CoA",
              "type": "boolean"
            },
            "coa_port": {
              "description": "CoA port number of the network device",
              "type": "integer",
              "format": "int64"
            },
            "radsec_enabled": {
              "description": "Flag indicating if the network device is radSec enabled",
              "type": "boolean"
            },
            "snmp_read": {
              "title": "SNMPReadSettings",
              "type": "object",
              "properties": {
                "force_read": {
                  "description": "Enable to always read information from this device",
                  "type": "boolean"
                },
                "read_arp_info": {
                  "description": "Enable to read ARP table from this device",
                  "type": "boolean"
                },
                "zone_name": {
                  "description": "Policy Manager Zone name to be associated with the network device",
                  "type": "string"
                },
                "snmp_version": {
                  "title": "SnmpVersion",
                  "description": "SNMP version of the network device",
                  "type": "string",
                  "enum": [
                    "V1",
                    "V2C",
                    "V3"
                  ]
                },
                "community_string": {
                  "description": "Community string of the network device",
                  "type": "string"
                },
                "security_level": {
                  "title": "SecurityLevel",
                  "description": "Security level of the network device",
                  "type": "string",
                  "enum": [
                    "NOAUTH_NOPRIV",
                    "AUTH_NOPRIV",
                    "AUTH_PRIV"
                  ]
                },
                "user": {
                  "description": "Username of the network device",
                  "type": "string"
                },
                "auth_protocol": {
                  "title": "AuthProtocol",
                  "description": "Authentication protocol of the network device",
                  "type": "string",
                  "enum": [
                    "MD5",
                    "SHA"
                  ]
                },
                "auth_key": {
                  "description": "Authentication key of the network device",
                  "type": "string"
                },
                "privacy_protocol": {
                  "title": "PrivacyProtocol",
                  "description": "Privacy protocol of the network device",
                  "type": "string",
                  "enum": [
                    "DES_CBC",
                    "AES_128"
                  ]
                },
                "privacy_key": {
                  "description": "Privacy key of the network device",
                  "type": "string"
                }
              }
            },
            "snmp_write": {
              "title": "SNMPWriteSettings",
              "type": "object",
              "properties": {
                "default_vlan": {
                  "description": "Default VLAN for port when SNMP-enforced session expires",
                  "type": "integer",
                  "format": "int64"
                },
                "snmp_version": {
                  "title": "SnmpVersion",
                  "description": "SNMP version of the network device",
                  "type": "string",
                  "enum": [
                    "V1",
                    "V2C",
                    "V3"
                  ]
                },
                "community_string": {
                  "description": "Community string of the network device",
                  "type": "string"
                },
                "security_level": {
                  "title": "SecurityLevel",
                  "description": "Security level of the network device",
                  "type": "string",
                  "enum": [
                    "NOAUTH_NOPRIV",
                    "AUTH_NOPRIV",
                    "AUTH_PRIV"
                  ]
                },
                "user": {
                  "description": "Username of the network device",
                  "type": "string"
                },
                "auth_protocol": {
                  "title": "AuthProtocol",
                  "description": "Authentication protocol of the network device",
                  "type": "string",
                  "enum": [
                    "MD5",
                    "SHA"
                  ]
                },
                "auth_key": {
                  "description": "Authentication key of the network device",
                  "type": "string"
                },
                "privacy_protocol": {
                  "title": "PrivacyProtocol",
                  "description": "Privacy protocol of the network device",
                  "type": "string",
                  "enum": [
                    "DES_CBC",
                    "AES_128"
                  ]
                },
                "privacy_key": {
                  "description": "Privacy key of the network device",
                  "type": "string"
                }
              }
            },
            "cli_config": {
              "title": "CLISettings",
              "type": "object",
              "properties": {
                "type": {
                  "title": "Type",
                  "description": "Access type of the network device",
                  "type": "string",
                  "enum": [
                    "SSH",
                    "Telnet"
                  ]
                },
                "port": {
                  "description": "SSH/Telnet port number of the network device",
                  "type": "integer",
                  "format": "int64"
                },
                "username": {
                  "description": "Username of the network device",
                  "type": "string"
                },
                "password": {
                  "description": "Password of the network device",
                  "type": "string"
                },
                "username_prompt_regex": {
                  "description": "Username prompt regex of the network device",
                  "type": "string"
                },
                "password_prompt_regex": {
                  "description": "Password prompt regex of the network device",
                  "type": "string"
                },
                "command_prompt_regex": {
                  "description": "Command prompt regex of the network device",
                  "type": "string"
                },
                "enable_prompt_regex": {
                  "description": "Enable prompt regex of the network device",
                  "type": "string"
                },
                "enable_password": {
                  "description": "Enable password of the network device",
                  "type": "string"
                }
              }
            },
            "onConnect_enforcement": {
              "title": "OnConnectEnforcementSettings",
              "type": "object",
              "properties": {
                "enabled": {
                  "description": "Flag indicating if the network device is enabled with OnConnect Enforcement. SNMP read configuration and Policy Manager Zone is a must for this to work.",
                  "type": "boolean"
                },
                "ports": {
                  "description": "Port names used in OnConnect Enforcement in CSV format (e.g. FastEthernet 1/0/10). Use empty string to enable for all ports. Ports determined to be uplink or trunk ports will be ignored.",
                  "type": "string"
                }
              }
            },
            "attributes": {
              "description": "Additional attributes(key/value pairs) may be stored with the network device",
              "type": "object"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getGETForNetworkDevice"
      },
      "task": true
    },
    {
      "name": "patchForNetworkDevice",
      "summary": "PATCH_for_NetworkDevice",
      "description": "Update some fields of a network device",
      "input": [
        {
          "name": "networkDeviceId",
          "type": "number",
          "info": "Numeric ID of the network device: 123",
          "required": true,
          "schema": {
            "title": "networkDeviceId",
            "type": "number"
          }
        },
        {
          "name": "body",
          "type": "object",
          "info": ": {\"id\": 123, \"description\": \"string\", \"name\": \"string\", \"ip_address\": \"string\", \"radius_secret\": \"string\", \"tacacs_secret\": \"string\", \"vendor_name\": \"string\", \"coa_capable\": \"boolean\", \"coa_port\": 123, \"radsec_enabled\": \"boolean\", \"snmp_read\": {\"force_read\": \"boolean\", \"read_arp_info\": \"boolean\", \"zone_name\": \"string\", \"snmp_version\": \"Must be one of [V1, V2C, V3]\", \"community_string\": \"string\", \"security_level\": \"Must be one of [NOAUTH_NOPRIV, AUTH_NOPRIV, AUTH_PRIV]\", \"user\": \"string\", \"auth_protocol\": \"Must be one of [MD5, SHA]\", \"auth_key\": \"string\", \"privacy_protocol\": \"Must be one of [DES_CBC, AES_128]\", \"privacy_key\": \"string\"}, \"snmp_write\": {\"default_vlan\": 123, \"snmp_version\": \"Must be one of [V1, V2C, V3]\", \"community_string\": \"string\", \"security_level\": \"Must be one of [NOAUTH_NOPRIV, AUTH_NOPRIV, AUTH_PRIV]\", \"user\": \"string\", \"auth_protocol\": \"Must be one of [MD5, SHA]\", \"auth_key\": \"string\", \"privacy_protocol\": \"Must be one of [DES_CBC, AES_128]\", \"privacy_key\": \"string\"}, \"cli_config\": {\"type\": \"Must be one of [SSH, Telnet]\", \"port\": 123, \"username\": \"string\", \"password\": \"string\", \"username_prompt_regex\": \"string\", \"password_prompt_regex\": \"string\", \"command_prompt_regex\": \"string\", \"enable_prompt_regex\": \"string\", \"enable_password\": \"string\"}, \"onConnect_enforcement\": {\"enabled\": \"boolean\", \"ports\": \"string\"}, \"attributes\": \"object\"}",
          "required": true,
          "schema": {
            "title": "NetworkDevice",
            "type": "object",
            "properties": {
              "id": {
                "description": "Numeric ID of the network device",
                "type": "integer",
                "format": "int64"
              },
              "description": {
                "description": "Description of the network device",
                "type": "string"
              },
              "name": {
                "description": "Name of the network device",
                "type": "string"
              },
              "ip_address": {
                "description": "IP or Subnet Address of the network device",
                "type": "string"
              },
              "radius_secret": {
                "description": "RADIUS Shared Secret of the network device",
                "type": "string"
              },
              "tacacs_secret": {
                "description": "TACACS+ Shared Secret of the network device",
                "type": "string"
              },
              "vendor_name": {
                "description": "Vendor Name of the network device",
                "type": "string"
              },
              "coa_capable": {
                "description": "Flag indicating if the network device is capable of CoA",
                "type": "boolean"
              },
              "coa_port": {
                "description": "CoA port number of the network device",
                "type": "integer",
                "format": "int64"
              },
              "radsec_enabled": {
                "description": "Flag indicating if the network device is radSec enabled",
                "type": "boolean"
              },
              "snmp_read": {
                "title": "SNMPReadSettings",
                "type": "object",
                "properties": {
                  "force_read": {
                    "description": "Enable to always read information from this device",
                    "type": "boolean"
                  },
                  "read_arp_info": {
                    "description": "Enable to read ARP table from this device",
                    "type": "boolean"
                  },
                  "zone_name": {
                    "description": "Policy Manager Zone name to be associated with the network device",
                    "type": "string"
                  },
                  "snmp_version": {
                    "title": "SnmpVersion",
                    "description": "SNMP version of the network device",
                    "type": "string",
                    "enum": [
                      "V1",
                      "V2C",
                      "V3"
                    ]
                  },
                  "community_string": {
                    "description": "Community string of the network device",
                    "type": "string"
                  },
                  "security_level": {
                    "title": "SecurityLevel",
                    "description": "Security level of the network device",
                    "type": "string",
                    "enum": [
                      "NOAUTH_NOPRIV",
                      "AUTH_NOPRIV",
                      "AUTH_PRIV"
                    ]
                  },
                  "user": {
                    "description": "Username of the network device",
                    "type": "string"
                  },
                  "auth_protocol": {
                    "title": "AuthProtocol",
                    "description": "Authentication protocol of the network device",
                    "type": "string",
                    "enum": [
                      "MD5",
                      "SHA"
                    ]
                  },
                  "auth_key": {
                    "description": "Authentication key of the network device",
                    "type": "string"
                  },
                  "privacy_protocol": {
                    "title": "PrivacyProtocol",
                    "description": "Privacy protocol of the network device",
                    "type": "string",
                    "enum": [
                      "DES_CBC",
                      "AES_128"
                    ]
                  },
                  "privacy_key": {
                    "description": "Privacy key of the network device",
                    "type": "string"
                  }
                }
              },
              "snmp_write": {
                "title": "SNMPWriteSettings",
                "type": "object",
                "properties": {
                  "default_vlan": {
                    "description": "Default VLAN for port when SNMP-enforced session expires",
                    "type": "integer",
                    "format": "int64"
                  },
                  "snmp_version": {
                    "title": "SnmpVersion",
                    "description": "SNMP version of the network device",
                    "type": "string",
                    "enum": [
                      "V1",
                      "V2C",
                      "V3"
                    ]
                  },
                  "community_string": {
                    "description": "Community string of the network device",
                    "type": "string"
                  },
                  "security_level": {
                    "title": "SecurityLevel",
                    "description": "Security level of the network device",
                    "type": "string",
                    "enum": [
                      "NOAUTH_NOPRIV",
                      "AUTH_NOPRIV",
                      "AUTH_PRIV"
                    ]
                  },
                  "user": {
                    "description": "Username of the network device",
                    "type": "string"
                  },
                  "auth_protocol": {
                    "title": "AuthProtocol",
                    "description": "Authentication protocol of the network device",
                    "type": "string",
                    "enum": [
                      "MD5",
                      "SHA"
                    ]
                  },
                  "auth_key": {
                    "description": "Authentication key of the network device",
                    "type": "string"
                  },
                  "privacy_protocol": {
                    "title": "PrivacyProtocol",
                    "description": "Privacy protocol of the network device",
                    "type": "string",
                    "enum": [
                      "DES_CBC",
                      "AES_128"
                    ]
                  },
                  "privacy_key": {
                    "description": "Privacy key of the network device",
                    "type": "string"
                  }
                }
              },
              "cli_config": {
                "title": "CLISettings",
                "type": "object",
                "properties": {
                  "type": {
                    "title": "Type",
                    "description": "Access type of the network device",
                    "type": "string",
                    "enum": [
                      "SSH",
                      "Telnet"
                    ]
                  },
                  "port": {
                    "description": "SSH/Telnet port number of the network device",
                    "type": "integer",
                    "format": "int64"
                  },
                  "username": {
                    "description": "Username of the network device",
                    "type": "string"
                  },
                  "password": {
                    "description": "Password of the network device",
                    "type": "string"
                  },
                  "username_prompt_regex": {
                    "description": "Username prompt regex of the network device",
                    "type": "string"
                  },
                  "password_prompt_regex": {
                    "description": "Password prompt regex of the network device",
                    "type": "string"
                  },
                  "command_prompt_regex": {
                    "description": "Command prompt regex of the network device",
                    "type": "string"
                  },
                  "enable_prompt_regex": {
                    "description": "Enable prompt regex of the network device",
                    "type": "string"
                  },
                  "enable_password": {
                    "description": "Enable password of the network device",
                    "type": "string"
                  }
                }
              },
              "onConnect_enforcement": {
                "title": "OnConnectEnforcementSettings",
                "type": "object",
                "properties": {
                  "enabled": {
                    "description": "Flag indicating if the network device is enabled with OnConnect Enforcement. SNMP read configuration and Policy Manager Zone is a must for this to work.",
                    "type": "boolean"
                  },
                  "ports": {
                    "description": "Port names used in OnConnect Enforcement in CSV format (e.g. FastEthernet 1/0/10). Use empty string to enable for all ports. Ports determined to be uplink or trunk ports will be ignored.",
                    "type": "string"
                  }
                }
              },
              "attributes": {
                "description": "Additional attributes(key/value pairs) may be stored with the network device",
                "type": "object"
              }
            }
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "NetworkDevice",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the network device",
              "type": "integer",
              "format": "int64"
            },
            "description": {
              "description": "Description of the network device",
              "type": "string"
            },
            "name": {
              "description": "Name of the network device",
              "type": "string"
            },
            "ip_address": {
              "description": "IP or Subnet Address of the network device",
              "type": "string"
            },
            "radius_secret": {
              "description": "RADIUS Shared Secret of the network device",
              "type": "string"
            },
            "tacacs_secret": {
              "description": "TACACS+ Shared Secret of the network device",
              "type": "string"
            },
            "vendor_name": {
              "description": "Vendor Name of the network device",
              "type": "string"
            },
            "coa_capable": {
              "description": "Flag indicating if the network device is capable of CoA",
              "type": "boolean"
            },
            "coa_port": {
              "description": "CoA port number of the network device",
              "type": "integer",
              "format": "int64"
            },
            "radsec_enabled": {
              "description": "Flag indicating if the network device is radSec enabled",
              "type": "boolean"
            },
            "snmp_read": {
              "title": "SNMPReadSettings",
              "type": "object",
              "properties": {
                "force_read": {
                  "description": "Enable to always read information from this device",
                  "type": "boolean"
                },
                "read_arp_info": {
                  "description": "Enable to read ARP table from this device",
                  "type": "boolean"
                },
                "zone_name": {
                  "description": "Policy Manager Zone name to be associated with the network device",
                  "type": "string"
                },
                "snmp_version": {
                  "title": "SnmpVersion",
                  "description": "SNMP version of the network device",
                  "type": "string",
                  "enum": [
                    "V1",
                    "V2C",
                    "V3"
                  ]
                },
                "community_string": {
                  "description": "Community string of the network device",
                  "type": "string"
                },
                "security_level": {
                  "title": "SecurityLevel",
                  "description": "Security level of the network device",
                  "type": "string",
                  "enum": [
                    "NOAUTH_NOPRIV",
                    "AUTH_NOPRIV",
                    "AUTH_PRIV"
                  ]
                },
                "user": {
                  "description": "Username of the network device",
                  "type": "string"
                },
                "auth_protocol": {
                  "title": "AuthProtocol",
                  "description": "Authentication protocol of the network device",
                  "type": "string",
                  "enum": [
                    "MD5",
                    "SHA"
                  ]
                },
                "auth_key": {
                  "description": "Authentication key of the network device",
                  "type": "string"
                },
                "privacy_protocol": {
                  "title": "PrivacyProtocol",
                  "description": "Privacy protocol of the network device",
                  "type": "string",
                  "enum": [
                    "DES_CBC",
                    "AES_128"
                  ]
                },
                "privacy_key": {
                  "description": "Privacy key of the network device",
                  "type": "string"
                }
              }
            },
            "snmp_write": {
              "title": "SNMPWriteSettings",
              "type": "object",
              "properties": {
                "default_vlan": {
                  "description": "Default VLAN for port when SNMP-enforced session expires",
                  "type": "integer",
                  "format": "int64"
                },
                "snmp_version": {
                  "title": "SnmpVersion",
                  "description": "SNMP version of the network device",
                  "type": "string",
                  "enum": [
                    "V1",
                    "V2C",
                    "V3"
                  ]
                },
                "community_string": {
                  "description": "Community string of the network device",
                  "type": "string"
                },
                "security_level": {
                  "title": "SecurityLevel",
                  "description": "Security level of the network device",
                  "type": "string",
                  "enum": [
                    "NOAUTH_NOPRIV",
                    "AUTH_NOPRIV",
                    "AUTH_PRIV"
                  ]
                },
                "user": {
                  "description": "Username of the network device",
                  "type": "string"
                },
                "auth_protocol": {
                  "title": "AuthProtocol",
                  "description": "Authentication protocol of the network device",
                  "type": "string",
                  "enum": [
                    "MD5",
                    "SHA"
                  ]
                },
                "auth_key": {
                  "description": "Authentication key of the network device",
                  "type": "string"
                },
                "privacy_protocol": {
                  "title": "PrivacyProtocol",
                  "description": "Privacy protocol of the network device",
                  "type": "string",
                  "enum": [
                    "DES_CBC",
                    "AES_128"
                  ]
                },
                "privacy_key": {
                  "description": "Privacy key of the network device",
                  "type": "string"
                }
              }
            },
            "cli_config": {
              "title": "CLISettings",
              "type": "object",
              "properties": {
                "type": {
                  "title": "Type",
                  "description": "Access type of the network device",
                  "type": "string",
                  "enum": [
                    "SSH",
                    "Telnet"
                  ]
                },
                "port": {
                  "description": "SSH/Telnet port number of the network device",
                  "type": "integer",
                  "format": "int64"
                },
                "username": {
                  "description": "Username of the network device",
                  "type": "string"
                },
                "password": {
                  "description": "Password of the network device",
                  "type": "string"
                },
                "username_prompt_regex": {
                  "description": "Username prompt regex of the network device",
                  "type": "string"
                },
                "password_prompt_regex": {
                  "description": "Password prompt regex of the network device",
                  "type": "string"
                },
                "command_prompt_regex": {
                  "description": "Command prompt regex of the network device",
                  "type": "string"
                },
                "enable_prompt_regex": {
                  "description": "Enable prompt regex of the network device",
                  "type": "string"
                },
                "enable_password": {
                  "description": "Enable password of the network device",
                  "type": "string"
                }
              }
            },
            "onConnect_enforcement": {
              "title": "OnConnectEnforcementSettings",
              "type": "object",
              "properties": {
                "enabled": {
                  "description": "Flag indicating if the network device is enabled with OnConnect Enforcement. SNMP read configuration and Policy Manager Zone is a must for this to work.",
                  "type": "boolean"
                },
                "ports": {
                  "description": "Port names used in OnConnect Enforcement in CSV format (e.g. FastEthernet 1/0/10). Use empty string to enable for all ports. Ports determined to be uplink or trunk ports will be ignored.",
                  "type": "string"
                }
              }
            },
            "attributes": {
              "description": "Additional attributes(key/value pairs) may be stored with the network device",
              "type": "object"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/patchForNetworkDevice"
      },
      "task": true
    },
    {
      "name": "putForNetworkDevice",
      "summary": "PUT_for_NetworkDevice",
      "description": "Replace a network device",
      "input": [
        {
          "name": "networkDeviceId",
          "type": "number",
          "info": "Numeric ID of the network device: 123",
          "required": true,
          "schema": {
            "title": "networkDeviceId",
            "type": "number"
          }
        },
        {
          "name": "body",
          "type": "object",
          "info": ": {\"id\": 123, \"description\": \"string\", \"name\": \"string\", \"ip_address\": \"string\", \"radius_secret\": \"string\", \"tacacs_secret\": \"string\", \"vendor_name\": \"string\", \"coa_capable\": \"boolean\", \"coa_port\": 123, \"radsec_enabled\": \"boolean\", \"snmp_read\": {\"force_read\": \"boolean\", \"read_arp_info\": \"boolean\", \"zone_name\": \"string\", \"snmp_version\": \"Must be one of [V1, V2C, V3]\", \"community_string\": \"string\", \"security_level\": \"Must be one of [NOAUTH_NOPRIV, AUTH_NOPRIV, AUTH_PRIV]\", \"user\": \"string\", \"auth_protocol\": \"Must be one of [MD5, SHA]\", \"auth_key\": \"string\", \"privacy_protocol\": \"Must be one of [DES_CBC, AES_128]\", \"privacy_key\": \"string\"}, \"snmp_write\": {\"default_vlan\": 123, \"snmp_version\": \"Must be one of [V1, V2C, V3]\", \"community_string\": \"string\", \"security_level\": \"Must be one of [NOAUTH_NOPRIV, AUTH_NOPRIV, AUTH_PRIV]\", \"user\": \"string\", \"auth_protocol\": \"Must be one of [MD5, SHA]\", \"auth_key\": \"string\", \"privacy_protocol\": \"Must be one of [DES_CBC, AES_128]\", \"privacy_key\": \"string\"}, \"cli_config\": {\"type\": \"Must be one of [SSH, Telnet]\", \"port\": 123, \"username\": \"string\", \"password\": \"string\", \"username_prompt_regex\": \"string\", \"password_prompt_regex\": \"string\", \"command_prompt_regex\": \"string\", \"enable_prompt_regex\": \"string\", \"enable_password\": \"string\"}, \"onConnect_enforcement\": {\"enabled\": \"boolean\", \"ports\": \"string\"}, \"attributes\": \"object\"}",
          "required": true,
          "schema": {
            "title": "NetworkDevice",
            "type": "object",
            "properties": {
              "id": {
                "description": "Numeric ID of the network device",
                "type": "integer",
                "format": "int64"
              },
              "description": {
                "description": "Description of the network device",
                "type": "string"
              },
              "name": {
                "description": "Name of the network device",
                "type": "string"
              },
              "ip_address": {
                "description": "IP or Subnet Address of the network device",
                "type": "string"
              },
              "radius_secret": {
                "description": "RADIUS Shared Secret of the network device",
                "type": "string"
              },
              "tacacs_secret": {
                "description": "TACACS+ Shared Secret of the network device",
                "type": "string"
              },
              "vendor_name": {
                "description": "Vendor Name of the network device",
                "type": "string"
              },
              "coa_capable": {
                "description": "Flag indicating if the network device is capable of CoA",
                "type": "boolean"
              },
              "coa_port": {
                "description": "CoA port number of the network device",
                "type": "integer",
                "format": "int64"
              },
              "radsec_enabled": {
                "description": "Flag indicating if the network device is radSec enabled",
                "type": "boolean"
              },
              "snmp_read": {
                "title": "SNMPReadSettings",
                "type": "object",
                "properties": {
                  "force_read": {
                    "description": "Enable to always read information from this device",
                    "type": "boolean"
                  },
                  "read_arp_info": {
                    "description": "Enable to read ARP table from this device",
                    "type": "boolean"
                  },
                  "zone_name": {
                    "description": "Policy Manager Zone name to be associated with the network device",
                    "type": "string"
                  },
                  "snmp_version": {
                    "title": "SnmpVersion",
                    "description": "SNMP version of the network device",
                    "type": "string",
                    "enum": [
                      "V1",
                      "V2C",
                      "V3"
                    ]
                  },
                  "community_string": {
                    "description": "Community string of the network device",
                    "type": "string"
                  },
                  "security_level": {
                    "title": "SecurityLevel",
                    "description": "Security level of the network device",
                    "type": "string",
                    "enum": [
                      "NOAUTH_NOPRIV",
                      "AUTH_NOPRIV",
                      "AUTH_PRIV"
                    ]
                  },
                  "user": {
                    "description": "Username of the network device",
                    "type": "string"
                  },
                  "auth_protocol": {
                    "title": "AuthProtocol",
                    "description": "Authentication protocol of the network device",
                    "type": "string",
                    "enum": [
                      "MD5",
                      "SHA"
                    ]
                  },
                  "auth_key": {
                    "description": "Authentication key of the network device",
                    "type": "string"
                  },
                  "privacy_protocol": {
                    "title": "PrivacyProtocol",
                    "description": "Privacy protocol of the network device",
                    "type": "string",
                    "enum": [
                      "DES_CBC",
                      "AES_128"
                    ]
                  },
                  "privacy_key": {
                    "description": "Privacy key of the network device",
                    "type": "string"
                  }
                }
              },
              "snmp_write": {
                "title": "SNMPWriteSettings",
                "type": "object",
                "properties": {
                  "default_vlan": {
                    "description": "Default VLAN for port when SNMP-enforced session expires",
                    "type": "integer",
                    "format": "int64"
                  },
                  "snmp_version": {
                    "title": "SnmpVersion",
                    "description": "SNMP version of the network device",
                    "type": "string",
                    "enum": [
                      "V1",
                      "V2C",
                      "V3"
                    ]
                  },
                  "community_string": {
                    "description": "Community string of the network device",
                    "type": "string"
                  },
                  "security_level": {
                    "title": "SecurityLevel",
                    "description": "Security level of the network device",
                    "type": "string",
                    "enum": [
                      "NOAUTH_NOPRIV",
                      "AUTH_NOPRIV",
                      "AUTH_PRIV"
                    ]
                  },
                  "user": {
                    "description": "Username of the network device",
                    "type": "string"
                  },
                  "auth_protocol": {
                    "title": "AuthProtocol",
                    "description": "Authentication protocol of the network device",
                    "type": "string",
                    "enum": [
                      "MD5",
                      "SHA"
                    ]
                  },
                  "auth_key": {
                    "description": "Authentication key of the network device",
                    "type": "string"
                  },
                  "privacy_protocol": {
                    "title": "PrivacyProtocol",
                    "description": "Privacy protocol of the network device",
                    "type": "string",
                    "enum": [
                      "DES_CBC",
                      "AES_128"
                    ]
                  },
                  "privacy_key": {
                    "description": "Privacy key of the network device",
                    "type": "string"
                  }
                }
              },
              "cli_config": {
                "title": "CLISettings",
                "type": "object",
                "properties": {
                  "type": {
                    "title": "Type",
                    "description": "Access type of the network device",
                    "type": "string",
                    "enum": [
                      "SSH",
                      "Telnet"
                    ]
                  },
                  "port": {
                    "description": "SSH/Telnet port number of the network device",
                    "type": "integer",
                    "format": "int64"
                  },
                  "username": {
                    "description": "Username of the network device",
                    "type": "string"
                  },
                  "password": {
                    "description": "Password of the network device",
                    "type": "string"
                  },
                  "username_prompt_regex": {
                    "description": "Username prompt regex of the network device",
                    "type": "string"
                  },
                  "password_prompt_regex": {
                    "description": "Password prompt regex of the network device",
                    "type": "string"
                  },
                  "command_prompt_regex": {
                    "description": "Command prompt regex of the network device",
                    "type": "string"
                  },
                  "enable_prompt_regex": {
                    "description": "Enable prompt regex of the network device",
                    "type": "string"
                  },
                  "enable_password": {
                    "description": "Enable password of the network device",
                    "type": "string"
                  }
                }
              },
              "onConnect_enforcement": {
                "title": "OnConnectEnforcementSettings",
                "type": "object",
                "properties": {
                  "enabled": {
                    "description": "Flag indicating if the network device is enabled with OnConnect Enforcement. SNMP read configuration and Policy Manager Zone is a must for this to work.",
                    "type": "boolean"
                  },
                  "ports": {
                    "description": "Port names used in OnConnect Enforcement in CSV format (e.g. FastEthernet 1/0/10). Use empty string to enable for all ports. Ports determined to be uplink or trunk ports will be ignored.",
                    "type": "string"
                  }
                }
              },
              "attributes": {
                "description": "Additional attributes(key/value pairs) may be stored with the network device",
                "type": "object"
              }
            }
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "NetworkDevice",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the network device",
              "type": "integer",
              "format": "int64"
            },
            "description": {
              "description": "Description of the network device",
              "type": "string"
            },
            "name": {
              "description": "Name of the network device",
              "type": "string"
            },
            "ip_address": {
              "description": "IP or Subnet Address of the network device",
              "type": "string"
            },
            "radius_secret": {
              "description": "RADIUS Shared Secret of the network device",
              "type": "string"
            },
            "tacacs_secret": {
              "description": "TACACS+ Shared Secret of the network device",
              "type": "string"
            },
            "vendor_name": {
              "description": "Vendor Name of the network device",
              "type": "string"
            },
            "coa_capable": {
              "description": "Flag indicating if the network device is capable of CoA",
              "type": "boolean"
            },
            "coa_port": {
              "description": "CoA port number of the network device",
              "type": "integer",
              "format": "int64"
            },
            "radsec_enabled": {
              "description": "Flag indicating if the network device is radSec enabled",
              "type": "boolean"
            },
            "snmp_read": {
              "title": "SNMPReadSettings",
              "type": "object",
              "properties": {
                "force_read": {
                  "description": "Enable to always read information from this device",
                  "type": "boolean"
                },
                "read_arp_info": {
                  "description": "Enable to read ARP table from this device",
                  "type": "boolean"
                },
                "zone_name": {
                  "description": "Policy Manager Zone name to be associated with the network device",
                  "type": "string"
                },
                "snmp_version": {
                  "title": "SnmpVersion",
                  "description": "SNMP version of the network device",
                  "type": "string",
                  "enum": [
                    "V1",
                    "V2C",
                    "V3"
                  ]
                },
                "community_string": {
                  "description": "Community string of the network device",
                  "type": "string"
                },
                "security_level": {
                  "title": "SecurityLevel",
                  "description": "Security level of the network device",
                  "type": "string",
                  "enum": [
                    "NOAUTH_NOPRIV",
                    "AUTH_NOPRIV",
                    "AUTH_PRIV"
                  ]
                },
                "user": {
                  "description": "Username of the network device",
                  "type": "string"
                },
                "auth_protocol": {
                  "title": "AuthProtocol",
                  "description": "Authentication protocol of the network device",
                  "type": "string",
                  "enum": [
                    "MD5",
                    "SHA"
                  ]
                },
                "auth_key": {
                  "description": "Authentication key of the network device",
                  "type": "string"
                },
                "privacy_protocol": {
                  "title": "PrivacyProtocol",
                  "description": "Privacy protocol of the network device",
                  "type": "string",
                  "enum": [
                    "DES_CBC",
                    "AES_128"
                  ]
                },
                "privacy_key": {
                  "description": "Privacy key of the network device",
                  "type": "string"
                }
              }
            },
            "snmp_write": {
              "title": "SNMPWriteSettings",
              "type": "object",
              "properties": {
                "default_vlan": {
                  "description": "Default VLAN for port when SNMP-enforced session expires",
                  "type": "integer",
                  "format": "int64"
                },
                "snmp_version": {
                  "title": "SnmpVersion",
                  "description": "SNMP version of the network device",
                  "type": "string",
                  "enum": [
                    "V1",
                    "V2C",
                    "V3"
                  ]
                },
                "community_string": {
                  "description": "Community string of the network device",
                  "type": "string"
                },
                "security_level": {
                  "title": "SecurityLevel",
                  "description": "Security level of the network device",
                  "type": "string",
                  "enum": [
                    "NOAUTH_NOPRIV",
                    "AUTH_NOPRIV",
                    "AUTH_PRIV"
                  ]
                },
                "user": {
                  "description": "Username of the network device",
                  "type": "string"
                },
                "auth_protocol": {
                  "title": "AuthProtocol",
                  "description": "Authentication protocol of the network device",
                  "type": "string",
                  "enum": [
                    "MD5",
                    "SHA"
                  ]
                },
                "auth_key": {
                  "description": "Authentication key of the network device",
                  "type": "string"
                },
                "privacy_protocol": {
                  "title": "PrivacyProtocol",
                  "description": "Privacy protocol of the network device",
                  "type": "string",
                  "enum": [
                    "DES_CBC",
                    "AES_128"
                  ]
                },
                "privacy_key": {
                  "description": "Privacy key of the network device",
                  "type": "string"
                }
              }
            },
            "cli_config": {
              "title": "CLISettings",
              "type": "object",
              "properties": {
                "type": {
                  "title": "Type",
                  "description": "Access type of the network device",
                  "type": "string",
                  "enum": [
                    "SSH",
                    "Telnet"
                  ]
                },
                "port": {
                  "description": "SSH/Telnet port number of the network device",
                  "type": "integer",
                  "format": "int64"
                },
                "username": {
                  "description": "Username of the network device",
                  "type": "string"
                },
                "password": {
                  "description": "Password of the network device",
                  "type": "string"
                },
                "username_prompt_regex": {
                  "description": "Username prompt regex of the network device",
                  "type": "string"
                },
                "password_prompt_regex": {
                  "description": "Password prompt regex of the network device",
                  "type": "string"
                },
                "command_prompt_regex": {
                  "description": "Command prompt regex of the network device",
                  "type": "string"
                },
                "enable_prompt_regex": {
                  "description": "Enable prompt regex of the network device",
                  "type": "string"
                },
                "enable_password": {
                  "description": "Enable password of the network device",
                  "type": "string"
                }
              }
            },
            "onConnect_enforcement": {
              "title": "OnConnectEnforcementSettings",
              "type": "object",
              "properties": {
                "enabled": {
                  "description": "Flag indicating if the network device is enabled with OnConnect Enforcement. SNMP read configuration and Policy Manager Zone is a must for this to work.",
                  "type": "boolean"
                },
                "ports": {
                  "description": "Port names used in OnConnect Enforcement in CSV format (e.g. FastEthernet 1/0/10). Use empty string to enable for all ports. Ports determined to be uplink or trunk ports will be ignored.",
                  "type": "string"
                }
              }
            },
            "attributes": {
              "description": "Additional attributes(key/value pairs) may be stored with the network device",
              "type": "object"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/putForNetworkDevice"
      },
      "task": true
    },
    {
      "name": "deleteForNetworkDevice",
      "summary": "DELETE_for_NetworkDevice",
      "description": "Delete a network device",
      "input": [
        {
          "name": "networkDeviceId",
          "type": "number",
          "info": "Numeric ID of the network device: 123",
          "required": true,
          "schema": {
            "title": "networkDeviceId",
            "type": "number"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/deleteForNetworkDevice"
      },
      "task": true
    },
    {
      "name": "getForNetworkDeviceByName",
      "summary": "GET_for_NetworkDevice_by_name",
      "description": "Get a network device by name",
      "input": [
        {
          "name": "name",
          "type": "string",
          "info": "Unique name of the network device: string",
          "required": true,
          "schema": {
            "title": "name",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "NetworkDevice",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the network device",
              "type": "integer",
              "format": "int64"
            },
            "description": {
              "description": "Description of the network device",
              "type": "string"
            },
            "name": {
              "description": "Name of the network device",
              "type": "string"
            },
            "ip_address": {
              "description": "IP or Subnet Address of the network device",
              "type": "string"
            },
            "radius_secret": {
              "description": "RADIUS Shared Secret of the network device",
              "type": "string"
            },
            "tacacs_secret": {
              "description": "TACACS+ Shared Secret of the network device",
              "type": "string"
            },
            "vendor_name": {
              "description": "Vendor Name of the network device",
              "type": "string"
            },
            "coa_capable": {
              "description": "Flag indicating if the network device is capable of CoA",
              "type": "boolean"
            },
            "coa_port": {
              "description": "CoA port number of the network device",
              "type": "integer",
              "format": "int64"
            },
            "radsec_enabled": {
              "description": "Flag indicating if the network device is radSec enabled",
              "type": "boolean"
            },
            "snmp_read": {
              "title": "SNMPReadSettings",
              "type": "object",
              "properties": {
                "force_read": {
                  "description": "Enable to always read information from this device",
                  "type": "boolean"
                },
                "read_arp_info": {
                  "description": "Enable to read ARP table from this device",
                  "type": "boolean"
                },
                "zone_name": {
                  "description": "Policy Manager Zone name to be associated with the network device",
                  "type": "string"
                },
                "snmp_version": {
                  "title": "SnmpVersion",
                  "description": "SNMP version of the network device",
                  "type": "string",
                  "enum": [
                    "V1",
                    "V2C",
                    "V3"
                  ]
                },
                "community_string": {
                  "description": "Community string of the network device",
                  "type": "string"
                },
                "security_level": {
                  "title": "SecurityLevel",
                  "description": "Security level of the network device",
                  "type": "string",
                  "enum": [
                    "NOAUTH_NOPRIV",
                    "AUTH_NOPRIV",
                    "AUTH_PRIV"
                  ]
                },
                "user": {
                  "description": "Username of the network device",
                  "type": "string"
                },
                "auth_protocol": {
                  "title": "AuthProtocol",
                  "description": "Authentication protocol of the network device",
                  "type": "string",
                  "enum": [
                    "MD5",
                    "SHA"
                  ]
                },
                "auth_key": {
                  "description": "Authentication key of the network device",
                  "type": "string"
                },
                "privacy_protocol": {
                  "title": "PrivacyProtocol",
                  "description": "Privacy protocol of the network device",
                  "type": "string",
                  "enum": [
                    "DES_CBC",
                    "AES_128"
                  ]
                },
                "privacy_key": {
                  "description": "Privacy key of the network device",
                  "type": "string"
                }
              }
            },
            "snmp_write": {
              "title": "SNMPWriteSettings",
              "type": "object",
              "properties": {
                "default_vlan": {
                  "description": "Default VLAN for port when SNMP-enforced session expires",
                  "type": "integer",
                  "format": "int64"
                },
                "snmp_version": {
                  "title": "SnmpVersion",
                  "description": "SNMP version of the network device",
                  "type": "string",
                  "enum": [
                    "V1",
                    "V2C",
                    "V3"
                  ]
                },
                "community_string": {
                  "description": "Community string of the network device",
                  "type": "string"
                },
                "security_level": {
                  "title": "SecurityLevel",
                  "description": "Security level of the network device",
                  "type": "string",
                  "enum": [
                    "NOAUTH_NOPRIV",
                    "AUTH_NOPRIV",
                    "AUTH_PRIV"
                  ]
                },
                "user": {
                  "description": "Username of the network device",
                  "type": "string"
                },
                "auth_protocol": {
                  "title": "AuthProtocol",
                  "description": "Authentication protocol of the network device",
                  "type": "string",
                  "enum": [
                    "MD5",
                    "SHA"
                  ]
                },
                "auth_key": {
                  "description": "Authentication key of the network device",
                  "type": "string"
                },
                "privacy_protocol": {
                  "title": "PrivacyProtocol",
                  "description": "Privacy protocol of the network device",
                  "type": "string",
                  "enum": [
                    "DES_CBC",
                    "AES_128"
                  ]
                },
                "privacy_key": {
                  "description": "Privacy key of the network device",
                  "type": "string"
                }
              }
            },
            "cli_config": {
              "title": "CLISettings",
              "type": "object",
              "properties": {
                "type": {
                  "title": "Type",
                  "description": "Access type of the network device",
                  "type": "string",
                  "enum": [
                    "SSH",
                    "Telnet"
                  ]
                },
                "port": {
                  "description": "SSH/Telnet port number of the network device",
                  "type": "integer",
                  "format": "int64"
                },
                "username": {
                  "description": "Username of the network device",
                  "type": "string"
                },
                "password": {
                  "description": "Password of the network device",
                  "type": "string"
                },
                "username_prompt_regex": {
                  "description": "Username prompt regex of the network device",
                  "type": "string"
                },
                "password_prompt_regex": {
                  "description": "Password prompt regex of the network device",
                  "type": "string"
                },
                "command_prompt_regex": {
                  "description": "Command prompt regex of the network device",
                  "type": "string"
                },
                "enable_prompt_regex": {
                  "description": "Enable prompt regex of the network device",
                  "type": "string"
                },
                "enable_password": {
                  "description": "Enable password of the network device",
                  "type": "string"
                }
              }
            },
            "onConnect_enforcement": {
              "title": "OnConnectEnforcementSettings",
              "type": "object",
              "properties": {
                "enabled": {
                  "description": "Flag indicating if the network device is enabled with OnConnect Enforcement. SNMP read configuration and Policy Manager Zone is a must for this to work.",
                  "type": "boolean"
                },
                "ports": {
                  "description": "Port names used in OnConnect Enforcement in CSV format (e.g. FastEthernet 1/0/10). Use empty string to enable for all ports. Ports determined to be uplink or trunk ports will be ignored.",
                  "type": "string"
                }
              }
            },
            "attributes": {
              "description": "Additional attributes(key/value pairs) may be stored with the network device",
              "type": "object"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getForNetworkDeviceByName"
      },
      "task": true
    },
    {
      "name": "patchForNetworkDeviceByName",
      "summary": "PATCH_for_NetworkDevice_by_name",
      "description": "Update some fields of a network device by name",
      "input": [
        {
          "name": "name",
          "type": "string",
          "info": "Unique name of the network device: string",
          "required": true,
          "schema": {
            "title": "name",
            "type": "string"
          }
        },
        {
          "name": "body",
          "type": "object",
          "info": ": {\"id\": 123, \"description\": \"string\", \"name\": \"string\", \"ip_address\": \"string\", \"radius_secret\": \"string\", \"tacacs_secret\": \"string\", \"vendor_name\": \"string\", \"coa_capable\": \"boolean\", \"coa_port\": 123, \"radsec_enabled\": \"boolean\", \"snmp_read\": {\"force_read\": \"boolean\", \"read_arp_info\": \"boolean\", \"zone_name\": \"string\", \"snmp_version\": \"Must be one of [V1, V2C, V3]\", \"community_string\": \"string\", \"security_level\": \"Must be one of [NOAUTH_NOPRIV, AUTH_NOPRIV, AUTH_PRIV]\", \"user\": \"string\", \"auth_protocol\": \"Must be one of [MD5, SHA]\", \"auth_key\": \"string\", \"privacy_protocol\": \"Must be one of [DES_CBC, AES_128]\", \"privacy_key\": \"string\"}, \"snmp_write\": {\"default_vlan\": 123, \"snmp_version\": \"Must be one of [V1, V2C, V3]\", \"community_string\": \"string\", \"security_level\": \"Must be one of [NOAUTH_NOPRIV, AUTH_NOPRIV, AUTH_PRIV]\", \"user\": \"string\", \"auth_protocol\": \"Must be one of [MD5, SHA]\", \"auth_key\": \"string\", \"privacy_protocol\": \"Must be one of [DES_CBC, AES_128]\", \"privacy_key\": \"string\"}, \"cli_config\": {\"type\": \"Must be one of [SSH, Telnet]\", \"port\": 123, \"username\": \"string\", \"password\": \"string\", \"username_prompt_regex\": \"string\", \"password_prompt_regex\": \"string\", \"command_prompt_regex\": \"string\", \"enable_prompt_regex\": \"string\", \"enable_password\": \"string\"}, \"onConnect_enforcement\": {\"enabled\": \"boolean\", \"ports\": \"string\"}, \"attributes\": \"object\"}",
          "required": true,
          "schema": {
            "title": "NetworkDevice",
            "type": "object",
            "properties": {
              "id": {
                "description": "Numeric ID of the network device",
                "type": "integer",
                "format": "int64"
              },
              "description": {
                "description": "Description of the network device",
                "type": "string"
              },
              "name": {
                "description": "Name of the network device",
                "type": "string"
              },
              "ip_address": {
                "description": "IP or Subnet Address of the network device",
                "type": "string"
              },
              "radius_secret": {
                "description": "RADIUS Shared Secret of the network device",
                "type": "string"
              },
              "tacacs_secret": {
                "description": "TACACS+ Shared Secret of the network device",
                "type": "string"
              },
              "vendor_name": {
                "description": "Vendor Name of the network device",
                "type": "string"
              },
              "coa_capable": {
                "description": "Flag indicating if the network device is capable of CoA",
                "type": "boolean"
              },
              "coa_port": {
                "description": "CoA port number of the network device",
                "type": "integer",
                "format": "int64"
              },
              "radsec_enabled": {
                "description": "Flag indicating if the network device is radSec enabled",
                "type": "boolean"
              },
              "snmp_read": {
                "title": "SNMPReadSettings",
                "type": "object",
                "properties": {
                  "force_read": {
                    "description": "Enable to always read information from this device",
                    "type": "boolean"
                  },
                  "read_arp_info": {
                    "description": "Enable to read ARP table from this device",
                    "type": "boolean"
                  },
                  "zone_name": {
                    "description": "Policy Manager Zone name to be associated with the network device",
                    "type": "string"
                  },
                  "snmp_version": {
                    "title": "SnmpVersion",
                    "description": "SNMP version of the network device",
                    "type": "string",
                    "enum": [
                      "V1",
                      "V2C",
                      "V3"
                    ]
                  },
                  "community_string": {
                    "description": "Community string of the network device",
                    "type": "string"
                  },
                  "security_level": {
                    "title": "SecurityLevel",
                    "description": "Security level of the network device",
                    "type": "string",
                    "enum": [
                      "NOAUTH_NOPRIV",
                      "AUTH_NOPRIV",
                      "AUTH_PRIV"
                    ]
                  },
                  "user": {
                    "description": "Username of the network device",
                    "type": "string"
                  },
                  "auth_protocol": {
                    "title": "AuthProtocol",
                    "description": "Authentication protocol of the network device",
                    "type": "string",
                    "enum": [
                      "MD5",
                      "SHA"
                    ]
                  },
                  "auth_key": {
                    "description": "Authentication key of the network device",
                    "type": "string"
                  },
                  "privacy_protocol": {
                    "title": "PrivacyProtocol",
                    "description": "Privacy protocol of the network device",
                    "type": "string",
                    "enum": [
                      "DES_CBC",
                      "AES_128"
                    ]
                  },
                  "privacy_key": {
                    "description": "Privacy key of the network device",
                    "type": "string"
                  }
                }
              },
              "snmp_write": {
                "title": "SNMPWriteSettings",
                "type": "object",
                "properties": {
                  "default_vlan": {
                    "description": "Default VLAN for port when SNMP-enforced session expires",
                    "type": "integer",
                    "format": "int64"
                  },
                  "snmp_version": {
                    "title": "SnmpVersion",
                    "description": "SNMP version of the network device",
                    "type": "string",
                    "enum": [
                      "V1",
                      "V2C",
                      "V3"
                    ]
                  },
                  "community_string": {
                    "description": "Community string of the network device",
                    "type": "string"
                  },
                  "security_level": {
                    "title": "SecurityLevel",
                    "description": "Security level of the network device",
                    "type": "string",
                    "enum": [
                      "NOAUTH_NOPRIV",
                      "AUTH_NOPRIV",
                      "AUTH_PRIV"
                    ]
                  },
                  "user": {
                    "description": "Username of the network device",
                    "type": "string"
                  },
                  "auth_protocol": {
                    "title": "AuthProtocol",
                    "description": "Authentication protocol of the network device",
                    "type": "string",
                    "enum": [
                      "MD5",
                      "SHA"
                    ]
                  },
                  "auth_key": {
                    "description": "Authentication key of the network device",
                    "type": "string"
                  },
                  "privacy_protocol": {
                    "title": "PrivacyProtocol",
                    "description": "Privacy protocol of the network device",
                    "type": "string",
                    "enum": [
                      "DES_CBC",
                      "AES_128"
                    ]
                  },
                  "privacy_key": {
                    "description": "Privacy key of the network device",
                    "type": "string"
                  }
                }
              },
              "cli_config": {
                "title": "CLISettings",
                "type": "object",
                "properties": {
                  "type": {
                    "title": "Type",
                    "description": "Access type of the network device",
                    "type": "string",
                    "enum": [
                      "SSH",
                      "Telnet"
                    ]
                  },
                  "port": {
                    "description": "SSH/Telnet port number of the network device",
                    "type": "integer",
                    "format": "int64"
                  },
                  "username": {
                    "description": "Username of the network device",
                    "type": "string"
                  },
                  "password": {
                    "description": "Password of the network device",
                    "type": "string"
                  },
                  "username_prompt_regex": {
                    "description": "Username prompt regex of the network device",
                    "type": "string"
                  },
                  "password_prompt_regex": {
                    "description": "Password prompt regex of the network device",
                    "type": "string"
                  },
                  "command_prompt_regex": {
                    "description": "Command prompt regex of the network device",
                    "type": "string"
                  },
                  "enable_prompt_regex": {
                    "description": "Enable prompt regex of the network device",
                    "type": "string"
                  },
                  "enable_password": {
                    "description": "Enable password of the network device",
                    "type": "string"
                  }
                }
              },
              "onConnect_enforcement": {
                "title": "OnConnectEnforcementSettings",
                "type": "object",
                "properties": {
                  "enabled": {
                    "description": "Flag indicating if the network device is enabled with OnConnect Enforcement. SNMP read configuration and Policy Manager Zone is a must for this to work.",
                    "type": "boolean"
                  },
                  "ports": {
                    "description": "Port names used in OnConnect Enforcement in CSV format (e.g. FastEthernet 1/0/10). Use empty string to enable for all ports. Ports determined to be uplink or trunk ports will be ignored.",
                    "type": "string"
                  }
                }
              },
              "attributes": {
                "description": "Additional attributes(key/value pairs) may be stored with the network device",
                "type": "object"
              }
            }
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "NetworkDevice",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the network device",
              "type": "integer",
              "format": "int64"
            },
            "description": {
              "description": "Description of the network device",
              "type": "string"
            },
            "name": {
              "description": "Name of the network device",
              "type": "string"
            },
            "ip_address": {
              "description": "IP or Subnet Address of the network device",
              "type": "string"
            },
            "radius_secret": {
              "description": "RADIUS Shared Secret of the network device",
              "type": "string"
            },
            "tacacs_secret": {
              "description": "TACACS+ Shared Secret of the network device",
              "type": "string"
            },
            "vendor_name": {
              "description": "Vendor Name of the network device",
              "type": "string"
            },
            "coa_capable": {
              "description": "Flag indicating if the network device is capable of CoA",
              "type": "boolean"
            },
            "coa_port": {
              "description": "CoA port number of the network device",
              "type": "integer",
              "format": "int64"
            },
            "radsec_enabled": {
              "description": "Flag indicating if the network device is radSec enabled",
              "type": "boolean"
            },
            "snmp_read": {
              "title": "SNMPReadSettings",
              "type": "object",
              "properties": {
                "force_read": {
                  "description": "Enable to always read information from this device",
                  "type": "boolean"
                },
                "read_arp_info": {
                  "description": "Enable to read ARP table from this device",
                  "type": "boolean"
                },
                "zone_name": {
                  "description": "Policy Manager Zone name to be associated with the network device",
                  "type": "string"
                },
                "snmp_version": {
                  "title": "SnmpVersion",
                  "description": "SNMP version of the network device",
                  "type": "string",
                  "enum": [
                    "V1",
                    "V2C",
                    "V3"
                  ]
                },
                "community_string": {
                  "description": "Community string of the network device",
                  "type": "string"
                },
                "security_level": {
                  "title": "SecurityLevel",
                  "description": "Security level of the network device",
                  "type": "string",
                  "enum": [
                    "NOAUTH_NOPRIV",
                    "AUTH_NOPRIV",
                    "AUTH_PRIV"
                  ]
                },
                "user": {
                  "description": "Username of the network device",
                  "type": "string"
                },
                "auth_protocol": {
                  "title": "AuthProtocol",
                  "description": "Authentication protocol of the network device",
                  "type": "string",
                  "enum": [
                    "MD5",
                    "SHA"
                  ]
                },
                "auth_key": {
                  "description": "Authentication key of the network device",
                  "type": "string"
                },
                "privacy_protocol": {
                  "title": "PrivacyProtocol",
                  "description": "Privacy protocol of the network device",
                  "type": "string",
                  "enum": [
                    "DES_CBC",
                    "AES_128"
                  ]
                },
                "privacy_key": {
                  "description": "Privacy key of the network device",
                  "type": "string"
                }
              }
            },
            "snmp_write": {
              "title": "SNMPWriteSettings",
              "type": "object",
              "properties": {
                "default_vlan": {
                  "description": "Default VLAN for port when SNMP-enforced session expires",
                  "type": "integer",
                  "format": "int64"
                },
                "snmp_version": {
                  "title": "SnmpVersion",
                  "description": "SNMP version of the network device",
                  "type": "string",
                  "enum": [
                    "V1",
                    "V2C",
                    "V3"
                  ]
                },
                "community_string": {
                  "description": "Community string of the network device",
                  "type": "string"
                },
                "security_level": {
                  "title": "SecurityLevel",
                  "description": "Security level of the network device",
                  "type": "string",
                  "enum": [
                    "NOAUTH_NOPRIV",
                    "AUTH_NOPRIV",
                    "AUTH_PRIV"
                  ]
                },
                "user": {
                  "description": "Username of the network device",
                  "type": "string"
                },
                "auth_protocol": {
                  "title": "AuthProtocol",
                  "description": "Authentication protocol of the network device",
                  "type": "string",
                  "enum": [
                    "MD5",
                    "SHA"
                  ]
                },
                "auth_key": {
                  "description": "Authentication key of the network device",
                  "type": "string"
                },
                "privacy_protocol": {
                  "title": "PrivacyProtocol",
                  "description": "Privacy protocol of the network device",
                  "type": "string",
                  "enum": [
                    "DES_CBC",
                    "AES_128"
                  ]
                },
                "privacy_key": {
                  "description": "Privacy key of the network device",
                  "type": "string"
                }
              }
            },
            "cli_config": {
              "title": "CLISettings",
              "type": "object",
              "properties": {
                "type": {
                  "title": "Type",
                  "description": "Access type of the network device",
                  "type": "string",
                  "enum": [
                    "SSH",
                    "Telnet"
                  ]
                },
                "port": {
                  "description": "SSH/Telnet port number of the network device",
                  "type": "integer",
                  "format": "int64"
                },
                "username": {
                  "description": "Username of the network device",
                  "type": "string"
                },
                "password": {
                  "description": "Password of the network device",
                  "type": "string"
                },
                "username_prompt_regex": {
                  "description": "Username prompt regex of the network device",
                  "type": "string"
                },
                "password_prompt_regex": {
                  "description": "Password prompt regex of the network device",
                  "type": "string"
                },
                "command_prompt_regex": {
                  "description": "Command prompt regex of the network device",
                  "type": "string"
                },
                "enable_prompt_regex": {
                  "description": "Enable prompt regex of the network device",
                  "type": "string"
                },
                "enable_password": {
                  "description": "Enable password of the network device",
                  "type": "string"
                }
              }
            },
            "onConnect_enforcement": {
              "title": "OnConnectEnforcementSettings",
              "type": "object",
              "properties": {
                "enabled": {
                  "description": "Flag indicating if the network device is enabled with OnConnect Enforcement. SNMP read configuration and Policy Manager Zone is a must for this to work.",
                  "type": "boolean"
                },
                "ports": {
                  "description": "Port names used in OnConnect Enforcement in CSV format (e.g. FastEthernet 1/0/10). Use empty string to enable for all ports. Ports determined to be uplink or trunk ports will be ignored.",
                  "type": "string"
                }
              }
            },
            "attributes": {
              "description": "Additional attributes(key/value pairs) may be stored with the network device",
              "type": "object"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/patchForNetworkDeviceByName"
      },
      "task": true
    },
    {
      "name": "putForNetworkDeviceByName",
      "summary": "PUT_for_NetworkDevice_by_name",
      "description": "Replace a network device by name",
      "input": [
        {
          "name": "name",
          "type": "string",
          "info": "Unique name of the network device: string",
          "required": true,
          "schema": {
            "title": "name",
            "type": "string"
          }
        },
        {
          "name": "body",
          "type": "object",
          "info": ": {\"id\": 123, \"description\": \"string\", \"name\": \"string\", \"ip_address\": \"string\", \"radius_secret\": \"string\", \"tacacs_secret\": \"string\", \"vendor_name\": \"string\", \"coa_capable\": \"boolean\", \"coa_port\": 123, \"radsec_enabled\": \"boolean\", \"snmp_read\": {\"force_read\": \"boolean\", \"read_arp_info\": \"boolean\", \"zone_name\": \"string\", \"snmp_version\": \"Must be one of [V1, V2C, V3]\", \"community_string\": \"string\", \"security_level\": \"Must be one of [NOAUTH_NOPRIV, AUTH_NOPRIV, AUTH_PRIV]\", \"user\": \"string\", \"auth_protocol\": \"Must be one of [MD5, SHA]\", \"auth_key\": \"string\", \"privacy_protocol\": \"Must be one of [DES_CBC, AES_128]\", \"privacy_key\": \"string\"}, \"snmp_write\": {\"default_vlan\": 123, \"snmp_version\": \"Must be one of [V1, V2C, V3]\", \"community_string\": \"string\", \"security_level\": \"Must be one of [NOAUTH_NOPRIV, AUTH_NOPRIV, AUTH_PRIV]\", \"user\": \"string\", \"auth_protocol\": \"Must be one of [MD5, SHA]\", \"auth_key\": \"string\", \"privacy_protocol\": \"Must be one of [DES_CBC, AES_128]\", \"privacy_key\": \"string\"}, \"cli_config\": {\"type\": \"Must be one of [SSH, Telnet]\", \"port\": 123, \"username\": \"string\", \"password\": \"string\", \"username_prompt_regex\": \"string\", \"password_prompt_regex\": \"string\", \"command_prompt_regex\": \"string\", \"enable_prompt_regex\": \"string\", \"enable_password\": \"string\"}, \"onConnect_enforcement\": {\"enabled\": \"boolean\", \"ports\": \"string\"}, \"attributes\": \"object\"}",
          "required": true,
          "schema": {
            "title": "NetworkDevice",
            "type": "object",
            "properties": {
              "id": {
                "description": "Numeric ID of the network device",
                "type": "integer",
                "format": "int64"
              },
              "description": {
                "description": "Description of the network device",
                "type": "string"
              },
              "name": {
                "description": "Name of the network device",
                "type": "string"
              },
              "ip_address": {
                "description": "IP or Subnet Address of the network device",
                "type": "string"
              },
              "radius_secret": {
                "description": "RADIUS Shared Secret of the network device",
                "type": "string"
              },
              "tacacs_secret": {
                "description": "TACACS+ Shared Secret of the network device",
                "type": "string"
              },
              "vendor_name": {
                "description": "Vendor Name of the network device",
                "type": "string"
              },
              "coa_capable": {
                "description": "Flag indicating if the network device is capable of CoA",
                "type": "boolean"
              },
              "coa_port": {
                "description": "CoA port number of the network device",
                "type": "integer",
                "format": "int64"
              },
              "radsec_enabled": {
                "description": "Flag indicating if the network device is radSec enabled",
                "type": "boolean"
              },
              "snmp_read": {
                "title": "SNMPReadSettings",
                "type": "object",
                "properties": {
                  "force_read": {
                    "description": "Enable to always read information from this device",
                    "type": "boolean"
                  },
                  "read_arp_info": {
                    "description": "Enable to read ARP table from this device",
                    "type": "boolean"
                  },
                  "zone_name": {
                    "description": "Policy Manager Zone name to be associated with the network device",
                    "type": "string"
                  },
                  "snmp_version": {
                    "title": "SnmpVersion",
                    "description": "SNMP version of the network device",
                    "type": "string",
                    "enum": [
                      "V1",
                      "V2C",
                      "V3"
                    ]
                  },
                  "community_string": {
                    "description": "Community string of the network device",
                    "type": "string"
                  },
                  "security_level": {
                    "title": "SecurityLevel",
                    "description": "Security level of the network device",
                    "type": "string",
                    "enum": [
                      "NOAUTH_NOPRIV",
                      "AUTH_NOPRIV",
                      "AUTH_PRIV"
                    ]
                  },
                  "user": {
                    "description": "Username of the network device",
                    "type": "string"
                  },
                  "auth_protocol": {
                    "title": "AuthProtocol",
                    "description": "Authentication protocol of the network device",
                    "type": "string",
                    "enum": [
                      "MD5",
                      "SHA"
                    ]
                  },
                  "auth_key": {
                    "description": "Authentication key of the network device",
                    "type": "string"
                  },
                  "privacy_protocol": {
                    "title": "PrivacyProtocol",
                    "description": "Privacy protocol of the network device",
                    "type": "string",
                    "enum": [
                      "DES_CBC",
                      "AES_128"
                    ]
                  },
                  "privacy_key": {
                    "description": "Privacy key of the network device",
                    "type": "string"
                  }
                }
              },
              "snmp_write": {
                "title": "SNMPWriteSettings",
                "type": "object",
                "properties": {
                  "default_vlan": {
                    "description": "Default VLAN for port when SNMP-enforced session expires",
                    "type": "integer",
                    "format": "int64"
                  },
                  "snmp_version": {
                    "title": "SnmpVersion",
                    "description": "SNMP version of the network device",
                    "type": "string",
                    "enum": [
                      "V1",
                      "V2C",
                      "V3"
                    ]
                  },
                  "community_string": {
                    "description": "Community string of the network device",
                    "type": "string"
                  },
                  "security_level": {
                    "title": "SecurityLevel",
                    "description": "Security level of the network device",
                    "type": "string",
                    "enum": [
                      "NOAUTH_NOPRIV",
                      "AUTH_NOPRIV",
                      "AUTH_PRIV"
                    ]
                  },
                  "user": {
                    "description": "Username of the network device",
                    "type": "string"
                  },
                  "auth_protocol": {
                    "title": "AuthProtocol",
                    "description": "Authentication protocol of the network device",
                    "type": "string",
                    "enum": [
                      "MD5",
                      "SHA"
                    ]
                  },
                  "auth_key": {
                    "description": "Authentication key of the network device",
                    "type": "string"
                  },
                  "privacy_protocol": {
                    "title": "PrivacyProtocol",
                    "description": "Privacy protocol of the network device",
                    "type": "string",
                    "enum": [
                      "DES_CBC",
                      "AES_128"
                    ]
                  },
                  "privacy_key": {
                    "description": "Privacy key of the network device",
                    "type": "string"
                  }
                }
              },
              "cli_config": {
                "title": "CLISettings",
                "type": "object",
                "properties": {
                  "type": {
                    "title": "Type",
                    "description": "Access type of the network device",
                    "type": "string",
                    "enum": [
                      "SSH",
                      "Telnet"
                    ]
                  },
                  "port": {
                    "description": "SSH/Telnet port number of the network device",
                    "type": "integer",
                    "format": "int64"
                  },
                  "username": {
                    "description": "Username of the network device",
                    "type": "string"
                  },
                  "password": {
                    "description": "Password of the network device",
                    "type": "string"
                  },
                  "username_prompt_regex": {
                    "description": "Username prompt regex of the network device",
                    "type": "string"
                  },
                  "password_prompt_regex": {
                    "description": "Password prompt regex of the network device",
                    "type": "string"
                  },
                  "command_prompt_regex": {
                    "description": "Command prompt regex of the network device",
                    "type": "string"
                  },
                  "enable_prompt_regex": {
                    "description": "Enable prompt regex of the network device",
                    "type": "string"
                  },
                  "enable_password": {
                    "description": "Enable password of the network device",
                    "type": "string"
                  }
                }
              },
              "onConnect_enforcement": {
                "title": "OnConnectEnforcementSettings",
                "type": "object",
                "properties": {
                  "enabled": {
                    "description": "Flag indicating if the network device is enabled with OnConnect Enforcement. SNMP read configuration and Policy Manager Zone is a must for this to work.",
                    "type": "boolean"
                  },
                  "ports": {
                    "description": "Port names used in OnConnect Enforcement in CSV format (e.g. FastEthernet 1/0/10). Use empty string to enable for all ports. Ports determined to be uplink or trunk ports will be ignored.",
                    "type": "string"
                  }
                }
              },
              "attributes": {
                "description": "Additional attributes(key/value pairs) may be stored with the network device",
                "type": "object"
              }
            }
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "NetworkDevice",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the network device",
              "type": "integer",
              "format": "int64"
            },
            "description": {
              "description": "Description of the network device",
              "type": "string"
            },
            "name": {
              "description": "Name of the network device",
              "type": "string"
            },
            "ip_address": {
              "description": "IP or Subnet Address of the network device",
              "type": "string"
            },
            "radius_secret": {
              "description": "RADIUS Shared Secret of the network device",
              "type": "string"
            },
            "tacacs_secret": {
              "description": "TACACS+ Shared Secret of the network device",
              "type": "string"
            },
            "vendor_name": {
              "description": "Vendor Name of the network device",
              "type": "string"
            },
            "coa_capable": {
              "description": "Flag indicating if the network device is capable of CoA",
              "type": "boolean"
            },
            "coa_port": {
              "description": "CoA port number of the network device",
              "type": "integer",
              "format": "int64"
            },
            "radsec_enabled": {
              "description": "Flag indicating if the network device is radSec enabled",
              "type": "boolean"
            },
            "snmp_read": {
              "title": "SNMPReadSettings",
              "type": "object",
              "properties": {
                "force_read": {
                  "description": "Enable to always read information from this device",
                  "type": "boolean"
                },
                "read_arp_info": {
                  "description": "Enable to read ARP table from this device",
                  "type": "boolean"
                },
                "zone_name": {
                  "description": "Policy Manager Zone name to be associated with the network device",
                  "type": "string"
                },
                "snmp_version": {
                  "title": "SnmpVersion",
                  "description": "SNMP version of the network device",
                  "type": "string",
                  "enum": [
                    "V1",
                    "V2C",
                    "V3"
                  ]
                },
                "community_string": {
                  "description": "Community string of the network device",
                  "type": "string"
                },
                "security_level": {
                  "title": "SecurityLevel",
                  "description": "Security level of the network device",
                  "type": "string",
                  "enum": [
                    "NOAUTH_NOPRIV",
                    "AUTH_NOPRIV",
                    "AUTH_PRIV"
                  ]
                },
                "user": {
                  "description": "Username of the network device",
                  "type": "string"
                },
                "auth_protocol": {
                  "title": "AuthProtocol",
                  "description": "Authentication protocol of the network device",
                  "type": "string",
                  "enum": [
                    "MD5",
                    "SHA"
                  ]
                },
                "auth_key": {
                  "description": "Authentication key of the network device",
                  "type": "string"
                },
                "privacy_protocol": {
                  "title": "PrivacyProtocol",
                  "description": "Privacy protocol of the network device",
                  "type": "string",
                  "enum": [
                    "DES_CBC",
                    "AES_128"
                  ]
                },
                "privacy_key": {
                  "description": "Privacy key of the network device",
                  "type": "string"
                }
              }
            },
            "snmp_write": {
              "title": "SNMPWriteSettings",
              "type": "object",
              "properties": {
                "default_vlan": {
                  "description": "Default VLAN for port when SNMP-enforced session expires",
                  "type": "integer",
                  "format": "int64"
                },
                "snmp_version": {
                  "title": "SnmpVersion",
                  "description": "SNMP version of the network device",
                  "type": "string",
                  "enum": [
                    "V1",
                    "V2C",
                    "V3"
                  ]
                },
                "community_string": {
                  "description": "Community string of the network device",
                  "type": "string"
                },
                "security_level": {
                  "title": "SecurityLevel",
                  "description": "Security level of the network device",
                  "type": "string",
                  "enum": [
                    "NOAUTH_NOPRIV",
                    "AUTH_NOPRIV",
                    "AUTH_PRIV"
                  ]
                },
                "user": {
                  "description": "Username of the network device",
                  "type": "string"
                },
                "auth_protocol": {
                  "title": "AuthProtocol",
                  "description": "Authentication protocol of the network device",
                  "type": "string",
                  "enum": [
                    "MD5",
                    "SHA"
                  ]
                },
                "auth_key": {
                  "description": "Authentication key of the network device",
                  "type": "string"
                },
                "privacy_protocol": {
                  "title": "PrivacyProtocol",
                  "description": "Privacy protocol of the network device",
                  "type": "string",
                  "enum": [
                    "DES_CBC",
                    "AES_128"
                  ]
                },
                "privacy_key": {
                  "description": "Privacy key of the network device",
                  "type": "string"
                }
              }
            },
            "cli_config": {
              "title": "CLISettings",
              "type": "object",
              "properties": {
                "type": {
                  "title": "Type",
                  "description": "Access type of the network device",
                  "type": "string",
                  "enum": [
                    "SSH",
                    "Telnet"
                  ]
                },
                "port": {
                  "description": "SSH/Telnet port number of the network device",
                  "type": "integer",
                  "format": "int64"
                },
                "username": {
                  "description": "Username of the network device",
                  "type": "string"
                },
                "password": {
                  "description": "Password of the network device",
                  "type": "string"
                },
                "username_prompt_regex": {
                  "description": "Username prompt regex of the network device",
                  "type": "string"
                },
                "password_prompt_regex": {
                  "description": "Password prompt regex of the network device",
                  "type": "string"
                },
                "command_prompt_regex": {
                  "description": "Command prompt regex of the network device",
                  "type": "string"
                },
                "enable_prompt_regex": {
                  "description": "Enable prompt regex of the network device",
                  "type": "string"
                },
                "enable_password": {
                  "description": "Enable password of the network device",
                  "type": "string"
                }
              }
            },
            "onConnect_enforcement": {
              "title": "OnConnectEnforcementSettings",
              "type": "object",
              "properties": {
                "enabled": {
                  "description": "Flag indicating if the network device is enabled with OnConnect Enforcement. SNMP read configuration and Policy Manager Zone is a must for this to work.",
                  "type": "boolean"
                },
                "ports": {
                  "description": "Port names used in OnConnect Enforcement in CSV format (e.g. FastEthernet 1/0/10). Use empty string to enable for all ports. Ports determined to be uplink or trunk ports will be ignored.",
                  "type": "string"
                }
              }
            },
            "attributes": {
              "description": "Additional attributes(key/value pairs) may be stored with the network device",
              "type": "object"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/putForNetworkDeviceByName"
      },
      "task": true
    },
    {
      "name": "deleteForNetworkDeviceByName",
      "summary": "DELETE_for_NetworkDevice_by_name",
      "description": "Delete a network device by name",
      "input": [
        {
          "name": "name",
          "type": "string",
          "info": "Unique name of the network device: string",
          "required": true,
          "schema": {
            "title": "name",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/deleteForNetworkDeviceByName"
      },
      "task": true
    },
    {
      "name": "getForNetworkDeviceGroup",
      "summary": "GET_for_NetworkDeviceGroup",
      "description": "Get a list of network device groups",
      "input": [
        {
          "name": "filter",
          "type": "string",
          "info": "JSON filter expression specifying the items to return: string",
          "required": false,
          "schema": {
            "title": "filter",
            "type": "string"
          }
        },
        {
          "name": "sort",
          "type": "string",
          "info": "Sort ordering for returned items: string",
          "required": false,
          "schema": {
            "title": "sort",
            "type": "string"
          }
        },
        {
          "name": "offset",
          "type": "number",
          "info": "Zero based offset to start from: 123",
          "required": false,
          "schema": {
            "title": "offset",
            "type": "number"
          }
        },
        {
          "name": "limit",
          "type": "number",
          "info": "Maximum number of items to return (1 – 1000): 123",
          "required": false,
          "schema": {
            "title": "limit",
            "type": "number"
          }
        },
        {
          "name": "calculateCount",
          "type": "boolean",
          "info": "Whether to calculate the total item count: boolean",
          "required": false,
          "schema": {
            "title": "calculateCount",
            "type": "boolean"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "NetworkDeviceGroupList",
          "type": "object",
          "properties": {
            "_embedded": {
              "title": "NetworkDeviceGroupItems",
              "type": "object",
              "properties": {
                "items": {
                  "description": "List of items matching the filter",
                  "type": "array",
                  "items": {
                    "title": "NetworkDeviceGroup",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Numeric ID of the network device group",
                        "type": "integer",
                        "format": "int64"
                      },
                      "name": {
                        "description": "Name of the network device group",
                        "type": "string"
                      },
                      "description": {
                        "description": "Description of the network device group",
                        "type": "string"
                      },
                      "group_format": {
                        "type": "string"
                      },
                      "value": {
                        "description": "Network devices in the specified format",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": [
                "items"
              ]
            },
            "_links": {
              "title": "HalLinks",
              "type": "object",
              "properties": {
                "self": {
                  "description": "URL of result",
                  "type": "string"
                },
                "first": {
                  "description": "URL of first page of results",
                  "type": "string"
                },
                "last": {
                  "description": "URL of last page of results",
                  "type": "string"
                },
                "prev": {
                  "description": "URL of previous page of results",
                  "type": "string"
                },
                "next": {
                  "description": "URL of next page of results",
                  "type": "string"
                }
              },
              "required": [
                "self",
                "first"
              ]
            },
            "count": {
              "description": "Total number of items matching the filter; returned if calculate_count is true",
              "type": "integer",
              "format": "int64"
            }
          },
          "required": [
            "_embedded",
            "_links"
          ]
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getForNetworkDeviceGroup"
      },
      "task": true
    },
    {
      "name": "postForNetworkDeviceGroup",
      "summary": "POST_for_NetworkDeviceGroup",
      "description": "Create a new network device group",
      "input": [
        {
          "name": "body",
          "type": "object",
          "info": ": {\"id\": 123, \"name\": \"string\", \"description\": \"string\", \"group_format\": \"string\", \"value\": \"string\"}",
          "required": true,
          "schema": {
            "title": "NetworkDeviceGroup",
            "type": "object",
            "properties": {
              "id": {
                "description": "Numeric ID of the network device group",
                "type": "integer",
                "format": "int64"
              },
              "name": {
                "description": "Name of the network device group",
                "type": "string"
              },
              "description": {
                "description": "Description of the network device group",
                "type": "string"
              },
              "group_format": {
                "type": "string"
              },
              "value": {
                "description": "Network devices in the specified format",
                "type": "string"
              }
            }
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "NetworkDeviceGroup",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the network device group",
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "description": "Name of the network device group",
              "type": "string"
            },
            "description": {
              "description": "Description of the network device group",
              "type": "string"
            },
            "group_format": {
              "type": "string"
            },
            "value": {
              "description": "Network devices in the specified format",
              "type": "string"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/postForNetworkDeviceGroup"
      },
      "task": true
    },
    {
      "name": "getGETForNetworkDeviceGroup",
      "summary": "GET_for_NetworkDeviceGroup",
      "description": "Get a network device group",
      "input": [
        {
          "name": "networkDeviceGroupId",
          "type": "number",
          "info": "Numeric ID of the network device group: 123",
          "required": true,
          "schema": {
            "title": "networkDeviceGroupId",
            "type": "number"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "NetworkDeviceGroup",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the network device group",
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "description": "Name of the network device group",
              "type": "string"
            },
            "description": {
              "description": "Description of the network device group",
              "type": "string"
            },
            "group_format": {
              "type": "string"
            },
            "value": {
              "description": "Network devices in the specified format",
              "type": "string"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getGETForNetworkDeviceGroup"
      },
      "task": true
    },
    {
      "name": "patchForNetworkDeviceGroup",
      "summary": "PATCH_for_NetworkDeviceGroup",
      "description": "Update some fields of a network device group",
      "input": [
        {
          "name": "networkDeviceGroupId",
          "type": "number",
          "info": "Numeric ID of the network device group: 123",
          "required": true,
          "schema": {
            "title": "networkDeviceGroupId",
            "type": "number"
          }
        },
        {
          "name": "body",
          "type": "object",
          "info": ": {\"id\": 123, \"name\": \"string\", \"description\": \"string\", \"group_format\": \"string\", \"value\": \"string\"}",
          "required": true,
          "schema": {
            "title": "NetworkDeviceGroup",
            "type": "object",
            "properties": {
              "id": {
                "description": "Numeric ID of the network device group",
                "type": "integer",
                "format": "int64"
              },
              "name": {
                "description": "Name of the network device group",
                "type": "string"
              },
              "description": {
                "description": "Description of the network device group",
                "type": "string"
              },
              "group_format": {
                "type": "string"
              },
              "value": {
                "description": "Network devices in the specified format",
                "type": "string"
              }
            }
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "NetworkDeviceGroup",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the network device group",
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "description": "Name of the network device group",
              "type": "string"
            },
            "description": {
              "description": "Description of the network device group",
              "type": "string"
            },
            "group_format": {
              "type": "string"
            },
            "value": {
              "description": "Network devices in the specified format",
              "type": "string"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/patchForNetworkDeviceGroup"
      },
      "task": true
    },
    {
      "name": "putForNetworkDeviceGroup",
      "summary": "PUT_for_NetworkDeviceGroup",
      "description": "Replace a network device group",
      "input": [
        {
          "name": "networkDeviceGroupId",
          "type": "number",
          "info": "Numeric ID of the network device group: 123",
          "required": true,
          "schema": {
            "title": "networkDeviceGroupId",
            "type": "number"
          }
        },
        {
          "name": "body",
          "type": "object",
          "info": ": {\"id\": 123, \"name\": \"string\", \"description\": \"string\", \"group_format\": \"string\", \"value\": \"string\"}",
          "required": true,
          "schema": {
            "title": "NetworkDeviceGroup",
            "type": "object",
            "properties": {
              "id": {
                "description": "Numeric ID of the network device group",
                "type": "integer",
                "format": "int64"
              },
              "name": {
                "description": "Name of the network device group",
                "type": "string"
              },
              "description": {
                "description": "Description of the network device group",
                "type": "string"
              },
              "group_format": {
                "type": "string"
              },
              "value": {
                "description": "Network devices in the specified format",
                "type": "string"
              }
            }
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "NetworkDeviceGroup",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the network device group",
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "description": "Name of the network device group",
              "type": "string"
            },
            "description": {
              "description": "Description of the network device group",
              "type": "string"
            },
            "group_format": {
              "type": "string"
            },
            "value": {
              "description": "Network devices in the specified format",
              "type": "string"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/putForNetworkDeviceGroup"
      },
      "task": true
    },
    {
      "name": "deleteForNetworkDeviceGroup",
      "summary": "DELETE_for_NetworkDeviceGroup",
      "description": "Delete a network device group",
      "input": [
        {
          "name": "networkDeviceGroupId",
          "type": "number",
          "info": "Numeric ID of the network device group: 123",
          "required": true,
          "schema": {
            "title": "networkDeviceGroupId",
            "type": "number"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/deleteForNetworkDeviceGroup"
      },
      "task": true
    },
    {
      "name": "getForNetworkDeviceGroupByName",
      "summary": "GET_for_NetworkDeviceGroup_by_name",
      "description": "Get a network device group by name",
      "input": [
        {
          "name": "name",
          "type": "string",
          "info": "Unique name of the network device group: string",
          "required": true,
          "schema": {
            "title": "name",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "NetworkDeviceGroup",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the network device group",
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "description": "Name of the network device group",
              "type": "string"
            },
            "description": {
              "description": "Description of the network device group",
              "type": "string"
            },
            "group_format": {
              "type": "string"
            },
            "value": {
              "description": "Network devices in the specified format",
              "type": "string"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/getForNetworkDeviceGroupByName"
      },
      "task": true
    },
    {
      "name": "patchForNetworkDeviceGroupByName",
      "summary": "PATCH_for_NetworkDeviceGroup_by_name",
      "description": "Update some fields of a network device group by name",
      "input": [
        {
          "name": "name",
          "type": "string",
          "info": "Unique name of the network device group: string",
          "required": true,
          "schema": {
            "title": "name",
            "type": "string"
          }
        },
        {
          "name": "body",
          "type": "object",
          "info": ": {\"id\": 123, \"name\": \"string\", \"description\": \"string\", \"group_format\": \"string\", \"value\": \"string\"}",
          "required": true,
          "schema": {
            "title": "NetworkDeviceGroup",
            "type": "object",
            "properties": {
              "id": {
                "description": "Numeric ID of the network device group",
                "type": "integer",
                "format": "int64"
              },
              "name": {
                "description": "Name of the network device group",
                "type": "string"
              },
              "description": {
                "description": "Description of the network device group",
                "type": "string"
              },
              "group_format": {
                "type": "string"
              },
              "value": {
                "description": "Network devices in the specified format",
                "type": "string"
              }
            }
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "NetworkDeviceGroup",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the network device group",
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "description": "Name of the network device group",
              "type": "string"
            },
            "description": {
              "description": "Description of the network device group",
              "type": "string"
            },
            "group_format": {
              "type": "string"
            },
            "value": {
              "description": "Network devices in the specified format",
              "type": "string"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/patchForNetworkDeviceGroupByName"
      },
      "task": true
    },
    {
      "name": "putForNetworkDeviceGroupByName",
      "summary": "PUT_for_NetworkDeviceGroup_by_name",
      "description": "Replace a network device group by name",
      "input": [
        {
          "name": "name",
          "type": "string",
          "info": "Unique name of the network device group: string",
          "required": true,
          "schema": {
            "title": "name",
            "type": "string"
          }
        },
        {
          "name": "body",
          "type": "object",
          "info": ": {\"id\": 123, \"name\": \"string\", \"description\": \"string\", \"group_format\": \"string\", \"value\": \"string\"}",
          "required": true,
          "schema": {
            "title": "NetworkDeviceGroup",
            "type": "object",
            "properties": {
              "id": {
                "description": "Numeric ID of the network device group",
                "type": "integer",
                "format": "int64"
              },
              "name": {
                "description": "Name of the network device group",
                "type": "string"
              },
              "description": {
                "description": "Description of the network device group",
                "type": "string"
              },
              "group_format": {
                "type": "string"
              },
              "value": {
                "description": "Network devices in the specified format",
                "type": "string"
              }
            }
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "NetworkDeviceGroup",
          "type": "object",
          "properties": {
            "id": {
              "description": "Numeric ID of the network device group",
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "description": "Name of the network device group",
              "type": "string"
            },
            "description": {
              "description": "Description of the network device group",
              "type": "string"
            },
            "group_format": {
              "type": "string"
            },
            "value": {
              "description": "Network devices in the specified format",
              "type": "string"
            }
          }
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/putForNetworkDeviceGroupByName"
      },
      "task": true
    },
    {
      "name": "deleteForNetworkDeviceGroupByName",
      "summary": "DELETE_for_NetworkDeviceGroup_by_name",
      "description": "Delete a network device group by name",
      "input": [
        {
          "name": "name",
          "type": "string",
          "info": "Unique name of the network device group: string",
          "required": true,
          "schema": {
            "title": "name",
            "type": "string"
          }
        }
      ],
      "output": {
        "name": "result",
        "type": "object",
        "description": "A JSON Object containing status, code and the result",
        "schema": {
          "title": "result",
          "type": "object"
        }
      },
      "roles": [
        "admin"
      ],
      "route": {
        "verb": "POST",
        "path": "/deleteForNetworkDeviceGroupByName"
      },
      "task": true
    }
  ],
  "views": []
}